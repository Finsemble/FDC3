{"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/da-server/src/BasicFDC3Server.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/da-server/src/BasicFDC3Server.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":61}},"2":{"start":{"line":4,"column":27},"end":{"line":4,"column":65}},"3":{"start":{"line":5,"column":24},"end":{"line":5,"column":59}},"4":{"start":{"line":6,"column":22},"end":{"line":6,"column":55}},"5":{"start":{"line":14,"column":8},"end":{"line":14,"column":33}},"6":{"start":{"line":15,"column":8},"end":{"line":15,"column":21}},"7":{"start":{"line":19,"column":8},"end":{"line":19,"column":69}},"8":{"start":{"line":19,"column":35},"end":{"line":19,"column":67}},"9":{"start":{"line":22,"column":0},"end":{"line":22,"column":42}},"10":{"start":{"line":25,"column":8},"end":{"line":29,"column":15}},"11":{"start":{"line":32,"column":0},"end":{"line":32,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":30},"end":{"line":16,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":27},"end":{"line":20,"column":5}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":30},"end":{"line":19,"column":31}},"loc":{"start":{"line":19,"column":35},"end":{"line":19,"column":67}},"line":19},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":99},"end":{"line":30,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":24,"column":45},"end":{"line":24,"column":68}},"type":"default-arg","locations":[{"start":{"line":24,"column":63},"end":{"line":24,"column":68}}],"line":24},"1":{"loc":{"start":{"line":24,"column":70},"end":{"line":24,"column":97}},"type":"default-arg","locations":[{"start":{"line":24,"column":93},"end":{"line":24,"column":97}}],"line":24}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":70,"6":70,"7":0,"8":0,"9":1,"10":70,"11":1},"f":{"0":70,"1":0,"2":0,"3":70},"b":{"0":[70],"1":[70]},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/da-server/src/BasicFDC3Server.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/packages/da-server/src/BasicFDC3Server.ts"],"names":[],"mappings":";;;AAEA,kEAA6E;AAC7E,4DAAyD;AAEzD,wDAAqD;AAYrD;;GAEG;AACH,MAAa,eAAe;IAEhB,QAAQ,CAAkB;IAC1B,EAAE,CAAoB;IAE9B,YAAY,QAA0B,EAAE,EAAsB;QAC1D,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;QACxB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IACjB,CAAC;IAED,OAAO,CAAC,OAAsE,EAAE,IAAgB;QAC5F,yEAAyE;QACzE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAA;IAChE,CAAC;CACJ;AAdD,0CAcC;AAED,MAAa,iBAAkB,SAAQ,eAAe;IAElD,YAAY,EAAsB,EAAE,SAAoB,EAAE,YAA4B,EAAE,kBAA0B,KAAK,EAAE,uBAA+B,IAAI;QACxJ,KAAK,CAAC;YACF,IAAI,mCAAgB,CAAC,YAAY,CAAC;YAClC,IAAI,6BAAa,CAAC,SAAS,EAAE,eAAe,CAAC;YAC7C,IAAI,yBAAW,CAAC,SAAS,EAAE,oBAAoB,CAAC;SACnD,EAAE,EAAE,CAAC,CAAA;IACV,CAAC;CACJ;AATD,8CASC","sourcesContent":["import { FDC3Server } from \"./FDC3Server\";\nimport { InstanceID, ServerContext } from \"./ServerContext\";\nimport { BroadcastHandler, ChannelState } from \"./handlers/BroadcastHandler\";\nimport { IntentHandler } from \"./handlers/IntentHandler\";\nimport { Directory } from \"./directory/DirectoryInterface\";\nimport { OpenHandler } from \"./handlers/OpenHandler\";\nimport { AppRequestMessage, WebConnectionProtocol4ValidateAppIdentity } from \"@kite9/fdc3-common\";\n\n\nexport interface MessageHandler {\n\n    /**\n     * Handles an AgentRequestMessage from the messaging source\n     */\n    accept(msg: any, sc: ServerContext<any>, from: InstanceID): void\n}\n\n/**\n * This defers all functionality to either MessageHandler's or the ServerContext objects.\n */\nexport class BasicFDC3Server implements FDC3Server {\n\n    private handlers: MessageHandler[]\n    private sc: ServerContext<any>\n\n    constructor(handlers: MessageHandler[], sc: ServerContext<any>) {\n        this.handlers = handlers\n        this.sc = sc;\n    }\n\n    receive(message: AppRequestMessage | WebConnectionProtocol4ValidateAppIdentity, from: InstanceID): void {\n        // this.sc.log(`MessageReceived: \\n ${JSON.stringify(message, null, 2)}`)\n        this.handlers.forEach(h => h.accept(message, this.sc, from))\n    }\n}\n\nexport class DefaultFDC3Server extends BasicFDC3Server {\n\n    constructor(sc: ServerContext<any>, directory: Directory, userChannels: ChannelState[], intentTimeoutMs: number = 20000, openHandlerTimeoutMs: number = 3000) {\n        super([\n            new BroadcastHandler(userChannels),\n            new IntentHandler(directory, intentTimeoutMs),\n            new OpenHandler(directory, openHandlerTimeoutMs)\n        ], sc)\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f23d21d15075e124d55c7445f9d8294b8835f470","contentHash":"1ce80f9ecf45152d71c3572aed8c7a076f08d38232154bc0d390835d6a0798db"},"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/da-server/src/handlers/BroadcastHandler.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/da-server/src/handlers/BroadcastHandler.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":56}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":37}},"3":{"start":{"line":5,"column":18},"end":{"line":5,"column":38}},"4":{"start":{"line":7,"column":0},"end":{"line":11,"column":60}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":50}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":48}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":56}},"8":{"start":{"line":13,"column":23},"end":{"line":13,"column":25}},"9":{"start":{"line":14,"column":21},"end":{"line":14,"column":23}},"10":{"start":{"line":15,"column":12},"end":{"line":15,"column":14}},"11":{"start":{"line":16,"column":21},"end":{"line":16,"column":23}},"12":{"start":{"line":18,"column":8},"end":{"line":18,"column":41}},"13":{"start":{"line":21,"column":8},"end":{"line":21,"column":52}},"14":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"15":{"start":{"line":25,"column":12},"end":{"line":25,"column":24}},"16":{"start":{"line":27,"column":8},"end":{"line":27,"column":56}},"17":{"start":{"line":27,"column":36},"end":{"line":27,"column":46}},"18":{"start":{"line":30,"column":8},"end":{"line":34,"column":9}},"19":{"start":{"line":31,"column":34},"end":{"line":31,"column":47}},"20":{"start":{"line":32,"column":35},"end":{"line":32,"column":49}},"21":{"start":{"line":33,"column":38},"end":{"line":33,"column":55}},"22":{"start":{"line":37,"column":8},"end":{"line":37,"column":83}},"23":{"start":{"line":37,"column":49},"end":{"line":37,"column":81}},"24":{"start":{"line":40,"column":8},"end":{"line":44,"column":11}},"25":{"start":{"line":41,"column":25},"end":{"line":41,"column":46}},"26":{"start":{"line":43,"column":12},"end":{"line":43,"column":36}},"27":{"start":{"line":47,"column":19},"end":{"line":47,"column":49}},"28":{"start":{"line":48,"column":8},"end":{"line":51,"column":9}},"29":{"start":{"line":49,"column":12},"end":{"line":49,"column":72}},"30":{"start":{"line":49,"column":48},"end":{"line":49,"column":70}},"31":{"start":{"line":50,"column":12},"end":{"line":50,"column":40}},"32":{"start":{"line":54,"column":21},"end":{"line":54,"column":48}},"33":{"start":{"line":55,"column":8},"end":{"line":58,"column":9}},"34":{"start":{"line":57,"column":12},"end":{"line":57,"column":19}},"35":{"start":{"line":59,"column":8},"end":{"line":86,"column":9}},"36":{"start":{"line":60,"column":12},"end":{"line":81,"column":13}},"37":{"start":{"line":62,"column":50},"end":{"line":62,"column":102}},"38":{"start":{"line":64,"column":47},"end":{"line":64,"column":103}},"39":{"start":{"line":65,"column":51},"end":{"line":65,"column":111}},"40":{"start":{"line":66,"column":47},"end":{"line":66,"column":103}},"41":{"start":{"line":67,"column":49},"end":{"line":67,"column":107}},"42":{"start":{"line":69,"column":41},"end":{"line":69,"column":91}},"43":{"start":{"line":71,"column":50},"end":{"line":71,"column":109}},"44":{"start":{"line":72,"column":58},"end":{"line":72,"column":125}},"45":{"start":{"line":74,"column":52},"end":{"line":74,"column":113}},"46":{"start":{"line":75,"column":56},"end":{"line":75,"column":121}},"47":{"start":{"line":77,"column":62},"end":{"line":77,"column":133}},"48":{"start":{"line":78,"column":70},"end":{"line":78,"column":149}},"49":{"start":{"line":80,"column":49},"end":{"line":80,"column":107}},"50":{"start":{"line":84,"column":33},"end":{"line":84,"column":85}},"51":{"start":{"line":85,"column":12},"end":{"line":85,"column":86}},"52":{"start":{"line":89,"column":19},"end":{"line":89,"column":34}},"53":{"start":{"line":90,"column":8},"end":{"line":95,"column":11}},"54":{"start":{"line":96,"column":8},"end":{"line":96,"column":175}},"55":{"start":{"line":99,"column":24},"end":{"line":99,"column":67}},"56":{"start":{"line":100,"column":21},"end":{"line":100,"column":45}},"57":{"start":{"line":101,"column":8},"end":{"line":107,"column":9}},"58":{"start":{"line":102,"column":28},"end":{"line":102,"column":117}},"59":{"start":{"line":102,"column":62},"end":{"line":102,"column":76}},"60":{"start":{"line":103,"column":12},"end":{"line":103,"column":110}},"61":{"start":{"line":106,"column":12},"end":{"line":106,"column":122}},"62":{"start":{"line":110,"column":18},"end":{"line":110,"column":97}},"63":{"start":{"line":110,"column":53},"end":{"line":110,"column":96}},"64":{"start":{"line":111,"column":8},"end":{"line":117,"column":9}},"65":{"start":{"line":112,"column":12},"end":{"line":112,"column":45}},"66":{"start":{"line":113,"column":12},"end":{"line":113,"column":113}},"67":{"start":{"line":116,"column":12},"end":{"line":116,"column":127}},"68":{"start":{"line":120,"column":30},"end":{"line":122,"column":63}},"69":{"start":{"line":121,"column":25},"end":{"line":121,"column":85}},"70":{"start":{"line":122,"column":25},"end":{"line":122,"column":62}},"71":{"start":{"line":123,"column":8},"end":{"line":125,"column":11}},"72":{"start":{"line":124,"column":12},"end":{"line":124,"column":147}},"73":{"start":{"line":126,"column":8},"end":{"line":126,"column":94}},"74":{"start":{"line":126,"column":66},"end":{"line":126,"column":92}},"75":{"start":{"line":127,"column":8},"end":{"line":127,"column":113}},"76":{"start":{"line":128,"column":8},"end":{"line":128,"column":95}},"77":{"start":{"line":131,"column":18},"end":{"line":132,"column":111}},"78":{"start":{"line":132,"column":28},"end":{"line":132,"column":110}},"79":{"start":{"line":133,"column":8},"end":{"line":142,"column":9}},"80":{"start":{"line":134,"column":23},"end":{"line":134,"column":47}},"81":{"start":{"line":135,"column":28},"end":{"line":135,"column":61}},"82":{"start":{"line":136,"column":12},"end":{"line":136,"column":145}},"83":{"start":{"line":137,"column":12},"end":{"line":137,"column":47}},"84":{"start":{"line":138,"column":12},"end":{"line":138,"column":101}},"85":{"start":{"line":141,"column":12},"end":{"line":141,"column":115}},"86":{"start":{"line":145,"column":24},"end":{"line":145,"column":28}},"87":{"start":{"line":146,"column":26},"end":{"line":146,"column":42}},"88":{"start":{"line":147,"column":8},"end":{"line":157,"column":9}},"89":{"start":{"line":148,"column":28},"end":{"line":148,"column":72}},"90":{"start":{"line":149,"column":12},"end":{"line":149,"column":60}},"91":{"start":{"line":150,"column":12},"end":{"line":156,"column":13}},"92":{"start":{"line":151,"column":16},"end":{"line":151,"column":127}},"93":{"start":{"line":152,"column":16},"end":{"line":152,"column":23}},"94":{"start":{"line":155,"column":16},"end":{"line":155,"column":39}},"95":{"start":{"line":158,"column":19},"end":{"line":165,"column":9}},"96":{"start":{"line":166,"column":8},"end":{"line":166,"column":39}},"97":{"start":{"line":167,"column":8},"end":{"line":167,"column":155}},"98":{"start":{"line":168,"column":8},"end":{"line":168,"column":120}},"99":{"start":{"line":171,"column":34},"end":{"line":173,"column":93}},"100":{"start":{"line":172,"column":25},"end":{"line":172,"column":62}},"101":{"start":{"line":173,"column":25},"end":{"line":173,"column":92}},"102":{"start":{"line":174,"column":29},"end":{"line":176,"column":41}},"103":{"start":{"line":175,"column":24},"end":{"line":175,"column":76}},"104":{"start":{"line":177,"column":8},"end":{"line":189,"column":11}},"105":{"start":{"line":178,"column":12},"end":{"line":188,"column":31}},"106":{"start":{"line":190,"column":8},"end":{"line":190,"column":78}},"107":{"start":{"line":191,"column":8},"end":{"line":191,"column":80}},"108":{"start":{"line":194,"column":31},"end":{"line":194,"column":59}},"109":{"start":{"line":195,"column":8},"end":{"line":206,"column":9}},"110":{"start":{"line":196,"column":12},"end":{"line":202,"column":44}},"111":{"start":{"line":205,"column":12},"end":{"line":205,"column":107}},"112":{"start":{"line":210,"column":27},"end":{"line":210,"column":70}},"113":{"start":{"line":211,"column":8},"end":{"line":213,"column":9}},"114":{"start":{"line":212,"column":12},"end":{"line":212,"column":127}},"115":{"start":{"line":215,"column":27},"end":{"line":215,"column":62}},"116":{"start":{"line":216,"column":8},"end":{"line":216,"column":53}},"117":{"start":{"line":217,"column":8},"end":{"line":217,"column":59}},"118":{"start":{"line":218,"column":8},"end":{"line":218,"column":86}},"119":{"start":{"line":221,"column":27},"end":{"line":221,"column":62}},"120":{"start":{"line":222,"column":31},"end":{"line":222,"column":62}},"121":{"start":{"line":223,"column":8},"end":{"line":226,"column":9}},"122":{"start":{"line":224,"column":12},"end":{"line":224,"column":51}},"123":{"start":{"line":225,"column":12},"end":{"line":225,"column":54}},"124":{"start":{"line":227,"column":8},"end":{"line":227,"column":90}},"125":{"start":{"line":230,"column":19},"end":{"line":230,"column":41}},"126":{"start":{"line":231,"column":22},"end":{"line":231,"column":45}},"127":{"start":{"line":232,"column":8},"end":{"line":237,"column":9}},"128":{"start":{"line":233,"column":12},"end":{"line":236,"column":13}},"129":{"start":{"line":234,"column":16},"end":{"line":234,"column":125}},"130":{"start":{"line":235,"column":16},"end":{"line":235,"column":23}},"131":{"start":{"line":238,"column":8},"end":{"line":243,"column":10}},"132":{"start":{"line":244,"column":8},"end":{"line":244,"column":33}},"133":{"start":{"line":245,"column":8},"end":{"line":245,"column":139}},"134":{"start":{"line":248,"column":29},"end":{"line":248,"column":79}},"135":{"start":{"line":248,"column":52},"end":{"line":248,"column":78}},"136":{"start":{"line":249,"column":8},"end":{"line":249,"column":222}},"137":{"start":{"line":249,"column":94},"end":{"line":249,"column":189}},"138":{"start":{"line":252,"column":24},"end":{"line":252,"column":74}},"139":{"start":{"line":253,"column":8},"end":{"line":266,"column":9}},"140":{"start":{"line":254,"column":12},"end":{"line":254,"column":135}},"141":{"start":{"line":257,"column":23},"end":{"line":263,"column":13}},"142":{"start":{"line":264,"column":12},"end":{"line":264,"column":41}},"143":{"start":{"line":265,"column":12},"end":{"line":265,"column":136}},"144":{"start":{"line":269,"column":8},"end":{"line":284,"column":9}},"145":{"start":{"line":270,"column":24},"end":{"line":280,"column":13}},"146":{"start":{"line":281,"column":12},"end":{"line":283,"column":58}},"147":{"start":{"line":282,"column":29},"end":{"line":282,"column":92}},"148":{"start":{"line":283,"column":30},"end":{"line":283,"column":56}},"149":{"start":{"line":287,"column":0},"end":{"line":287,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":1},"end":{"line":7,"column":2}},"loc":{"start":{"line":7,"column":24},"end":{"line":11,"column":1}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":37},"end":{"line":19,"column":5}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":28},"end":{"line":22,"column":5}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":23},"end":{"line":28,"column":5}},"line":23},"4":{"name":"(anonymous_4)","decl":{"start":{"line":27,"column":31},"end":{"line":27,"column":32}},"loc":{"start":{"line":27,"column":36},"end":{"line":27,"column":46}},"line":27},"5":{"name":"(anonymous_5)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":37},"end":{"line":35,"column":5}},"line":29},"6":{"name":"(anonymous_6)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":24},"end":{"line":38,"column":5}},"line":36},"7":{"name":"(anonymous_7)","decl":{"start":{"line":37,"column":44},"end":{"line":37,"column":45}},"loc":{"start":{"line":37,"column":49},"end":{"line":37,"column":81}},"line":37},"8":{"name":"(anonymous_8)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":45},"end":{"line":45,"column":5}},"line":39},"9":{"name":"(anonymous_9)","decl":{"start":{"line":41,"column":20},"end":{"line":41,"column":21}},"loc":{"start":{"line":41,"column":25},"end":{"line":41,"column":46}},"line":41},"10":{"name":"(anonymous_10)","decl":{"start":{"line":42,"column":21},"end":{"line":42,"column":22}},"loc":{"start":{"line":42,"column":26},"end":{"line":44,"column":9}},"line":42},"11":{"name":"(anonymous_11)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":43},"end":{"line":52,"column":5}},"line":46},"12":{"name":"(anonymous_12)","decl":{"start":{"line":49,"column":43},"end":{"line":49,"column":44}},"loc":{"start":{"line":49,"column":48},"end":{"line":49,"column":70}},"line":49},"13":{"name":"(anonymous_13)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":26},"end":{"line":87,"column":5}},"line":53},"14":{"name":"(anonymous_14)","decl":{"start":{"line":88,"column":4},"end":{"line":88,"column":5}},"loc":{"start":{"line":88,"column":54},"end":{"line":97,"column":5}},"line":88},"15":{"name":"(anonymous_15)","decl":{"start":{"line":98,"column":4},"end":{"line":98,"column":5}},"loc":{"start":{"line":98,"column":51},"end":{"line":108,"column":5}},"line":98},"16":{"name":"(anonymous_16)","decl":{"start":{"line":102,"column":57},"end":{"line":102,"column":58}},"loc":{"start":{"line":102,"column":62},"end":{"line":102,"column":76}},"line":102},"17":{"name":"(anonymous_17)","decl":{"start":{"line":109,"column":4},"end":{"line":109,"column":5}},"loc":{"start":{"line":109,"column":72},"end":{"line":118,"column":5}},"line":109},"18":{"name":"(anonymous_18)","decl":{"start":{"line":110,"column":48},"end":{"line":110,"column":49}},"loc":{"start":{"line":110,"column":53},"end":{"line":110,"column":96}},"line":110},"19":{"name":"(anonymous_19)","decl":{"start":{"line":119,"column":4},"end":{"line":119,"column":5}},"loc":{"start":{"line":119,"column":58},"end":{"line":129,"column":5}},"line":119},"20":{"name":"(anonymous_20)","decl":{"start":{"line":121,"column":20},"end":{"line":121,"column":21}},"loc":{"start":{"line":121,"column":25},"end":{"line":121,"column":85}},"line":121},"21":{"name":"(anonymous_21)","decl":{"start":{"line":122,"column":20},"end":{"line":122,"column":21}},"loc":{"start":{"line":122,"column":25},"end":{"line":122,"column":62}},"line":122},"22":{"name":"(anonymous_22)","decl":{"start":{"line":123,"column":30},"end":{"line":123,"column":31}},"loc":{"start":{"line":123,"column":35},"end":{"line":125,"column":9}},"line":123},"23":{"name":"(anonymous_23)","decl":{"start":{"line":126,"column":61},"end":{"line":126,"column":62}},"loc":{"start":{"line":126,"column":66},"end":{"line":126,"column":92}},"line":126},"24":{"name":"(anonymous_24)","decl":{"start":{"line":130,"column":4},"end":{"line":130,"column":5}},"loc":{"start":{"line":130,"column":60},"end":{"line":143,"column":5}},"line":130},"25":{"name":"(anonymous_25)","decl":{"start":{"line":132,"column":23},"end":{"line":132,"column":24}},"loc":{"start":{"line":132,"column":28},"end":{"line":132,"column":110}},"line":132},"26":{"name":"(anonymous_26)","decl":{"start":{"line":144,"column":4},"end":{"line":144,"column":5}},"loc":{"start":{"line":144,"column":52},"end":{"line":169,"column":5}},"line":144},"27":{"name":"(anonymous_27)","decl":{"start":{"line":170,"column":4},"end":{"line":170,"column":5}},"loc":{"start":{"line":170,"column":43},"end":{"line":192,"column":5}},"line":170},"28":{"name":"(anonymous_28)","decl":{"start":{"line":172,"column":20},"end":{"line":172,"column":21}},"loc":{"start":{"line":172,"column":25},"end":{"line":172,"column":62}},"line":172},"29":{"name":"(anonymous_29)","decl":{"start":{"line":173,"column":20},"end":{"line":173,"column":21}},"loc":{"start":{"line":173,"column":25},"end":{"line":173,"column":92}},"line":173},"30":{"name":"(anonymous_30)","decl":{"start":{"line":175,"column":17},"end":{"line":175,"column":18}},"loc":{"start":{"line":175,"column":22},"end":{"line":175,"column":78}},"line":175},"31":{"name":"(anonymous_31)","decl":{"start":{"line":177,"column":29},"end":{"line":177,"column":30}},"loc":{"start":{"line":177,"column":36},"end":{"line":189,"column":9}},"line":177},"32":{"name":"(anonymous_32)","decl":{"start":{"line":193,"column":4},"end":{"line":193,"column":5}},"loc":{"start":{"line":193,"column":51},"end":{"line":207,"column":5}},"line":193},"33":{"name":"(anonymous_33)","decl":{"start":{"line":208,"column":4},"end":{"line":208,"column":5}},"loc":{"start":{"line":208,"column":49},"end":{"line":219,"column":5}},"line":208},"34":{"name":"(anonymous_34)","decl":{"start":{"line":220,"column":4},"end":{"line":220,"column":5}},"loc":{"start":{"line":220,"column":53},"end":{"line":228,"column":5}},"line":220},"35":{"name":"(anonymous_35)","decl":{"start":{"line":229,"column":4},"end":{"line":229,"column":5}},"loc":{"start":{"line":229,"column":45},"end":{"line":246,"column":5}},"line":229},"36":{"name":"(anonymous_36)","decl":{"start":{"line":247,"column":4},"end":{"line":247,"column":5}},"loc":{"start":{"line":247,"column":49},"end":{"line":250,"column":5}},"line":247},"37":{"name":"(anonymous_37)","decl":{"start":{"line":248,"column":47},"end":{"line":248,"column":48}},"loc":{"start":{"line":248,"column":52},"end":{"line":248,"column":78}},"line":248},"38":{"name":"(anonymous_38)","decl":{"start":{"line":249,"column":88},"end":{"line":249,"column":89}},"loc":{"start":{"line":249,"column":94},"end":{"line":249,"column":189}},"line":249},"39":{"name":"(anonymous_39)","decl":{"start":{"line":251,"column":4},"end":{"line":251,"column":5}},"loc":{"start":{"line":251,"column":64},"end":{"line":267,"column":5}},"line":251},"40":{"name":"(anonymous_40)","decl":{"start":{"line":268,"column":4},"end":{"line":268,"column":5}},"loc":{"start":{"line":268,"column":84},"end":{"line":285,"column":5}},"line":268},"41":{"name":"(anonymous_41)","decl":{"start":{"line":282,"column":24},"end":{"line":282,"column":25}},"loc":{"start":{"line":282,"column":29},"end":{"line":282,"column":92}},"line":282},"42":{"name":"(anonymous_42)","decl":{"start":{"line":283,"column":25},"end":{"line":283,"column":26}},"loc":{"start":{"line":283,"column":30},"end":{"line":283,"column":56}},"line":283}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":3},"end":{"line":11,"column":58}},"type":"binary-expr","locations":[{"start":{"line":11,"column":3},"end":{"line":11,"column":14}},{"start":{"line":11,"column":19},"end":{"line":11,"column":57}}],"line":11},"1":{"loc":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},{"start":{"line":24,"column":8},"end":{"line":26,"column":9}}],"line":24},"2":{"loc":{"start":{"line":27,"column":15},"end":{"line":27,"column":55}},"type":"binary-expr","locations":[{"start":{"line":27,"column":15},"end":{"line":27,"column":47}},{"start":{"line":27,"column":51},"end":{"line":27,"column":55}}],"line":27},"3":{"loc":{"start":{"line":30,"column":8},"end":{"line":34,"column":9}},"type":"switch","locations":[{"start":{"line":31,"column":12},"end":{"line":31,"column":47}},{"start":{"line":32,"column":12},"end":{"line":32,"column":49}},{"start":{"line":33,"column":12},"end":{"line":33,"column":55}}],"line":30},"4":{"loc":{"start":{"line":48,"column":8},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":51,"column":9}},{"start":{"line":48,"column":8},"end":{"line":51,"column":9}}],"line":48},"5":{"loc":{"start":{"line":55,"column":8},"end":{"line":58,"column":9}},"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":58,"column":9}},{"start":{"line":55,"column":8},"end":{"line":58,"column":9}}],"line":55},"6":{"loc":{"start":{"line":60,"column":12},"end":{"line":81,"column":13}},"type":"switch","locations":[{"start":{"line":62,"column":16},"end":{"line":62,"column":102}},{"start":{"line":64,"column":16},"end":{"line":64,"column":103}},{"start":{"line":65,"column":16},"end":{"line":65,"column":111}},{"start":{"line":66,"column":16},"end":{"line":66,"column":103}},{"start":{"line":67,"column":16},"end":{"line":67,"column":107}},{"start":{"line":69,"column":16},"end":{"line":69,"column":91}},{"start":{"line":71,"column":16},"end":{"line":71,"column":109}},{"start":{"line":72,"column":16},"end":{"line":72,"column":125}},{"start":{"line":74,"column":16},"end":{"line":74,"column":113}},{"start":{"line":75,"column":16},"end":{"line":75,"column":121}},{"start":{"line":77,"column":16},"end":{"line":77,"column":133}},{"start":{"line":78,"column":16},"end":{"line":78,"column":149}},{"start":{"line":80,"column":16},"end":{"line":80,"column":107}}],"line":60},"7":{"loc":{"start":{"line":85,"column":56},"end":{"line":85,"column":70}},"type":"binary-expr","locations":[{"start":{"line":85,"column":56},"end":{"line":85,"column":65}},{"start":{"line":85,"column":69},"end":{"line":85,"column":70}}],"line":85},"8":{"loc":{"start":{"line":101,"column":8},"end":{"line":107,"column":9}},"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":107,"column":9}},{"start":{"line":101,"column":8},"end":{"line":107,"column":9}}],"line":101},"9":{"loc":{"start":{"line":102,"column":28},"end":{"line":102,"column":117}},"type":"cond-expr","locations":[{"start":{"line":102,"column":36},"end":{"line":102,"column":85}},{"start":{"line":102,"column":90},"end":{"line":102,"column":116}}],"line":102},"10":{"loc":{"start":{"line":102,"column":36},"end":{"line":102,"column":85}},"type":"binary-expr","locations":[{"start":{"line":102,"column":36},"end":{"line":102,"column":77}},{"start":{"line":102,"column":81},"end":{"line":102,"column":85}}],"line":102},"11":{"loc":{"start":{"line":102,"column":90},"end":{"line":102,"column":116}},"type":"binary-expr","locations":[{"start":{"line":102,"column":90},"end":{"line":102,"column":108}},{"start":{"line":102,"column":112},"end":{"line":102,"column":116}}],"line":102},"12":{"loc":{"start":{"line":111,"column":8},"end":{"line":117,"column":9}},"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":117,"column":9}},{"start":{"line":111,"column":8},"end":{"line":117,"column":9}}],"line":111},"13":{"loc":{"start":{"line":121,"column":25},"end":{"line":121,"column":85}},"type":"binary-expr","locations":[{"start":{"line":121,"column":26},"end":{"line":121,"column":47}},{"start":{"line":121,"column":53},"end":{"line":121,"column":84}}],"line":121},"14":{"loc":{"start":{"line":124,"column":119},"end":{"line":124,"column":145}},"type":"binary-expr","locations":[{"start":{"line":124,"column":119},"end":{"line":124,"column":132}},{"start":{"line":124,"column":136},"end":{"line":124,"column":145}}],"line":124},"15":{"loc":{"start":{"line":132,"column":28},"end":{"line":132,"column":110}},"type":"binary-expr","locations":[{"start":{"line":132,"column":29},"end":{"line":132,"column":72}},{"start":{"line":132,"column":78},"end":{"line":132,"column":109}}],"line":132},"16":{"loc":{"start":{"line":133,"column":8},"end":{"line":142,"column":9}},"type":"if","locations":[{"start":{"line":133,"column":8},"end":{"line":142,"column":9}},{"start":{"line":133,"column":8},"end":{"line":142,"column":9}}],"line":133},"17":{"loc":{"start":{"line":136,"column":38},"end":{"line":136,"column":57}},"type":"binary-expr","locations":[{"start":{"line":136,"column":38},"end":{"line":136,"column":49}},{"start":{"line":136,"column":53},"end":{"line":136,"column":57}}],"line":136},"18":{"loc":{"start":{"line":136,"column":116},"end":{"line":136,"column":143}},"type":"binary-expr","locations":[{"start":{"line":136,"column":116},"end":{"line":136,"column":130}},{"start":{"line":136,"column":134},"end":{"line":136,"column":143}}],"line":136},"19":{"loc":{"start":{"line":147,"column":8},"end":{"line":157,"column":9}},"type":"if","locations":[{"start":{"line":147,"column":8},"end":{"line":157,"column":9}},{"start":{"line":147,"column":8},"end":{"line":157,"column":9}}],"line":147},"20":{"loc":{"start":{"line":149,"column":26},"end":{"line":149,"column":59}},"type":"binary-expr","locations":[{"start":{"line":149,"column":26},"end":{"line":149,"column":39}},{"start":{"line":149,"column":43},"end":{"line":149,"column":59}}],"line":149},"21":{"loc":{"start":{"line":150,"column":12},"end":{"line":156,"column":13}},"type":"if","locations":[{"start":{"line":150,"column":12},"end":{"line":156,"column":13}},{"start":{"line":150,"column":12},"end":{"line":156,"column":13}}],"line":150},"22":{"loc":{"start":{"line":160,"column":24},"end":{"line":160,"column":59}},"type":"binary-expr","locations":[{"start":{"line":160,"column":24},"end":{"line":160,"column":39}},{"start":{"line":160,"column":43},"end":{"line":160,"column":59}}],"line":160},"23":{"loc":{"start":{"line":167,"column":116},"end":{"line":167,"column":153}},"type":"binary-expr","locations":[{"start":{"line":167,"column":116},"end":{"line":167,"column":140}},{"start":{"line":167,"column":144},"end":{"line":167,"column":153}}],"line":167},"24":{"loc":{"start":{"line":173,"column":25},"end":{"line":173,"column":92}},"type":"binary-expr","locations":[{"start":{"line":173,"column":25},"end":{"line":173,"column":46}},{"start":{"line":173,"column":50},"end":{"line":173,"column":92}}],"line":173},"25":{"loc":{"start":{"line":195,"column":8},"end":{"line":206,"column":9}},"type":"if","locations":[{"start":{"line":195,"column":8},"end":{"line":206,"column":9}},{"start":{"line":195,"column":8},"end":{"line":206,"column":9}}],"line":195},"26":{"loc":{"start":{"line":211,"column":8},"end":{"line":213,"column":9}},"type":"if","locations":[{"start":{"line":211,"column":8},"end":{"line":213,"column":9}},{"start":{"line":211,"column":8},"end":{"line":213,"column":9}}],"line":211},"27":{"loc":{"start":{"line":211,"column":12},"end":{"line":211,"column":73}},"type":"binary-expr","locations":[{"start":{"line":211,"column":13},"end":{"line":211,"column":31}},{"start":{"line":211,"column":37},"end":{"line":211,"column":72}}],"line":211},"28":{"loc":{"start":{"line":215,"column":27},"end":{"line":215,"column":62}},"type":"binary-expr","locations":[{"start":{"line":215,"column":27},"end":{"line":215,"column":42}},{"start":{"line":215,"column":46},"end":{"line":215,"column":62}}],"line":215},"29":{"loc":{"start":{"line":221,"column":27},"end":{"line":221,"column":62}},"type":"binary-expr","locations":[{"start":{"line":221,"column":27},"end":{"line":221,"column":42}},{"start":{"line":221,"column":46},"end":{"line":221,"column":62}}],"line":221},"30":{"loc":{"start":{"line":223,"column":8},"end":{"line":226,"column":9}},"type":"if","locations":[{"start":{"line":223,"column":8},"end":{"line":226,"column":9}},{"start":{"line":223,"column":8},"end":{"line":226,"column":9}}],"line":223},"31":{"loc":{"start":{"line":232,"column":8},"end":{"line":237,"column":9}},"type":"if","locations":[{"start":{"line":232,"column":8},"end":{"line":237,"column":9}},{"start":{"line":232,"column":8},"end":{"line":237,"column":9}}],"line":232},"32":{"loc":{"start":{"line":233,"column":12},"end":{"line":236,"column":13}},"type":"if","locations":[{"start":{"line":233,"column":12},"end":{"line":236,"column":13}},{"start":{"line":233,"column":12},"end":{"line":236,"column":13}}],"line":233},"33":{"loc":{"start":{"line":253,"column":8},"end":{"line":266,"column":9}},"type":"if","locations":[{"start":{"line":253,"column":8},"end":{"line":266,"column":9}},{"start":{"line":253,"column":8},"end":{"line":266,"column":9}}],"line":253},"34":{"loc":{"start":{"line":253,"column":12},"end":{"line":253,"column":70}},"type":"binary-expr","locations":[{"start":{"line":253,"column":13},"end":{"line":253,"column":28}},{"start":{"line":253,"column":34},"end":{"line":253,"column":69}}],"line":253},"35":{"loc":{"start":{"line":269,"column":8},"end":{"line":284,"column":9}},"type":"if","locations":[{"start":{"line":269,"column":8},"end":{"line":284,"column":9}},{"start":{"line":269,"column":8},"end":{"line":284,"column":9}}],"line":269},"36":{"loc":{"start":{"line":282,"column":29},"end":{"line":282,"column":92}},"type":"binary-expr","locations":[{"start":{"line":282,"column":30},"end":{"line":282,"column":61}},{"start":{"line":282,"column":67},"end":{"line":282,"column":91}}],"line":282}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":70,"9":70,"10":70,"11":70,"12":70,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":1},"f":{"0":1,"1":70,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0},"b":{"0":[1,1],"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0,0,0,0,0,0,0,0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/da-server/src/handlers/BroadcastHandler.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/packages/da-server/src/handlers/BroadcastHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import { MessageHandler } from \"../BasicFDC3Server\";\nimport { InstanceID, ServerContext } from \"../ServerContext\";\nimport { AppIdentifier, ChannelError, Context } from \"@finos/fdc3\";\nimport { successResponse, errorResponse, onlyUnique } from \"./support\";\nimport {\n    PrivateChannelEventListenerTypes,\n    GetCurrentContextRequest,\n    BroadcastRequest,\n    ContextListenerUnsubscribeRequest,\n    AddContextListenerRequest,\n    PrivateChannelDisconnectRequest,\n    PrivateChannelAddEventListenerRequest,\n    PrivateChannelUnsubscribeEventListenerRequest,\n    GetOrCreateChannelRequest,\n    GetUserChannelsRequest,\n    LeaveCurrentChannelRequest,\n    JoinUserChannelRequest,\n    GetCurrentChannelRequest, AgentEventMessage, CreatePrivateChannelRequest, DisplayMetadata\n} from \"@kite9/fdc3-common\";\n\ntype ContextListenerRegistration = {\n    appId: string,\n    instanceId: string,\n    listenerUuid: string,\n    channelId: string | null,\n    contextType: string | null\n    userChannelListener: boolean\n}\n\ntype NotificationAgentEventMessage = 'privateChannelOnAddContextListenerEvent' | 'privateChannelOnDisconnectEvent' | 'privateChannelOnUnsubscribeEvent'\n\ntype PrivateChannelEventListener = {\n    appId: string,\n    instanceId: string,\n    channelId: string,\n    eventType: PrivateChannelEventListenerTypes,\n    listenerUuid: string\n}\n\nexport enum ChannelType { 'user', 'app', 'private' }\n\nexport type ChannelState = {\n    id: string,\n    type: ChannelType,\n    context: Context[],\n    displayMetadata: DisplayMetadata\n}\n\nexport class BroadcastHandler implements MessageHandler {\n\n    private contextListeners: ContextListenerRegistration[] = []\n    private readonly eventListeners: PrivateChannelEventListener[] = []\n    private readonly state: ChannelState[] = []\n    private readonly currentChannel: { [instanceId: string]: ChannelState } = {}\n\n    constructor(initialChannelState: ChannelState[]) {\n        this.state = initialChannelState\n    }\n\n    getCurrentChannel(from: AppIdentifier): ChannelState | null {\n        return this.currentChannel[from.instanceId!!]\n    }\n\n    getChannelById(id: string | null): ChannelState | null {\n        if (id == null) {\n            return null\n        }\n        return this.state.find(c => c.id == id) ?? null\n    }\n\n    convertChannelTypeToString(type: ChannelType): string {\n        switch (type) {\n            case ChannelType.app: return 'app'\n            case ChannelType.user: return 'user'\n            case ChannelType.private: return 'private'\n        }\n    }\n\n    getListeners(appId: AppIdentifier) {\n        return this.contextListeners.filter(r => r.instanceId == appId.instanceId)\n    }\n\n    moveUserChannelListeners(app: AppIdentifier, channelId: string | null) {\n        this.getListeners(app)\n            .filter(l => l.userChannelListener)\n            .forEach(l => {\n                l.channelId = channelId\n            })\n    }\n\n    updateChannelState(channelId: string, context: Context) {\n        const cs = this.getChannelById(channelId)\n        if (cs) {\n            cs.context = cs.context.filter(c => c.type != context.type)\n            cs.context.unshift(context)\n        }\n    }\n\n    accept(msg: any, sc: ServerContext<any>, uuid: InstanceID) {\n        const from = sc.getInstanceDetails(uuid)\n\n        if (from == null) {\n            // this handler only deals with connected apps\n            return\n        }\n\n        try {\n\n            switch (msg.type as string | null) {\n                // app channels registration\n                case 'getOrCreateChannelRequest': return this.handleGetOrCreateRequest(msg as GetOrCreateChannelRequest, sc, from)\n\n                // user channel management\n                case 'getUserChannelsRequest': return this.handleGetUserChannelsRequest(msg as GetUserChannelsRequest, sc, from)\n                case 'leaveCurrentChannelRequest': return this.handleLeaveCurrentChannelRequest(msg as LeaveCurrentChannelRequest, sc, from)\n                case 'joinUserChannelRequest': return this.handleJoinUserChannelRequest(msg as JoinUserChannelRequest, sc, from)\n                case 'getCurrentChannelRequest': return this.handleGetCurrentChannelRequest(msg as GetCurrentChannelRequest, sc, from)\n\n                // general broadcast\n                case 'broadcastRequest': return this.handleBroadcastRequest(msg as BroadcastRequest, sc, from)\n\n                // context listeners\n                case 'addContextListenerRequest': return this.handleAddContextListenerRequest(msg as AddContextListenerRequest, sc, from)\n                case 'contextListenerUnsubscribeRequest': return this.handleContextListenerUnsubscribeRequest(msg as ContextListenerUnsubscribeRequest, sc, from)\n\n                // private channels create/disconnect\n                case 'createPrivateChannelRequest': return this.handleCreatePrivateChannelRequest(msg as CreatePrivateChannelRequest, sc, from)\n                case 'privateChannelDisconnectRequest': return this.handlePrivateChannelDisconnectRequest(msg as PrivateChannelDisconnectRequest, sc, from)\n\n                // private channel event listeners\n                case 'privateChannelAddEventListenerRequest': return this.handlePrivateChannelAddEventListenerRequest(msg as PrivateChannelAddEventListenerRequest, from, sc)\n                case 'privateChannelUnsubscribeEventListenerRequest': return this.handlePrivateChannelUnsubscribeEventListenerRequest(msg as PrivateChannelUnsubscribeEventListenerRequest, sc, from)\n\n                // handling state synchronisation of channels\n                case 'getCurrentContextRequest': return this.handleGetCurrentContextRequest(msg as GetCurrentContextRequest, sc, from)\n            }\n        } catch (e: any) {\n            const responseType = msg.type.replace(new RegExp(\"Request$\"), 'Response')\n            errorResponse(sc, msg, from, e.message ?? e, responseType)\n        }\n    }\n    handleCreatePrivateChannelRequest(arg0: CreatePrivateChannelRequest, sc: ServerContext<any>, from: AppIdentifier) {\n        const id = sc.createUUID()\n        this.state.push({\n            id,\n            type: ChannelType.private,\n            context: [],\n            displayMetadata: {\n            }\n        })\n\n        successResponse(sc, arg0, from, { privateChannel: { id, type: this.convertChannelTypeToString(ChannelType.private) } }, 'createPrivateChannelResponse')\n    }\n\n    handleGetCurrentContextRequest(arg0: GetCurrentContextRequest, sc: ServerContext<any>, from: AppIdentifier) {\n        const channel = this.getChannelById(arg0.payload.channelId)\n        const type = arg0.payload.contextType\n\n        if (channel) {\n            const context = type ? (channel.context.find(c => c.type == type) ?? null) : (channel.context[0] ?? null)\n            successResponse(sc, arg0, from, { context: context }, 'getCurrentContextResponse')\n        } else {\n            errorResponse(sc, arg0, from, ChannelError.NoChannelFound, 'getCurrentContextResponse')\n        }\n    }\n\n    handlePrivateChannelUnsubscribeEventListenerRequest(arg0: PrivateChannelUnsubscribeEventListenerRequest, sc: ServerContext<any>, from: AppIdentifier) {\n        const i = this.eventListeners.findIndex(r => r.listenerUuid == arg0.payload.listenerUUID)\n        if (i > -1) {\n            this.eventListeners.splice(i, 1)\n            successResponse(sc, arg0, from, {}, 'privateChannelUnsubscribeEventListenerResponse')\n        } else {\n            errorResponse(sc, arg0, from, \"ListenerNotFound\", 'privateChannelUnsubscribeEventListenerResponse')\n        }\n    }\n\n    handlePrivateChannelDisconnectRequest(arg0: PrivateChannelDisconnectRequest, sc: ServerContext<any>, from: AppIdentifier) {\n        const toUnsubscribe = this.contextListeners\n            .filter(r => (r.appId == from.appId) && (r.instanceId == from.instanceId))\n            .filter(r => r.channelId == arg0.payload.channelId)\n\n        toUnsubscribe.forEach(u => {\n            this.invokeEventListeners(arg0.payload.channelId, \"onUnsubscribe\", 'privateChannelOnUnsubscribeEvent', sc, u.contextType ?? undefined)\n        })\n\n        this.contextListeners = this.contextListeners.filter(r => !toUnsubscribe.includes(r))\n        this.invokeEventListeners(arg0.payload.channelId, \"onDisconnect\", 'privateChannelOnDisconnectEvent', sc)\n        successResponse(sc, arg0, from, {}, 'privateChannelDisconnectResponse')\n    }\n\n    handleContextListenerUnsubscribeRequest(arg0: ContextListenerUnsubscribeRequest, sc: ServerContext<any>, from: AppIdentifier) {\n        const i = this.contextListeners\n            .findIndex(r => (r.listenerUuid == arg0.payload.listenerUUID) && (r.instanceId == from.instanceId))\n\n        if (i > -1) {\n            const rl = this.contextListeners[i]\n            const channel = this.getChannelById(rl.channelId)\n            this.invokeEventListeners(channel?.id ?? null, \"onUnsubscribe\", 'privateChannelOnUnsubscribeEvent', sc, rl.contextType ?? undefined)\n            this.contextListeners.splice(i, 1)\n            successResponse(sc, arg0, from, {}, 'contextListenerUnsubscribeResponse')\n        } else {\n            errorResponse(sc, arg0, from, \"ListenerNotFound\", 'contextListenerUnsubscribeResponse')\n        }\n    }\n\n    handleAddContextListenerRequest(arg0: AddContextListenerRequest, sc: ServerContext<any>, from: AppIdentifier) {\n        var channelId = null\n        var channelType = ChannelType.user\n\n        if (arg0.payload?.channelId) {\n            const channel = this.getChannelById(arg0.payload?.channelId)\n            channelType = channel?.type ?? ChannelType.user\n\n            if (channel == null) {\n                errorResponse(sc, arg0, from, ChannelError.NoChannelFound, 'addContextListenerResponse')\n                return\n            } else {\n                channelId = channel.id\n            }\n        }\n\n        const lr: ContextListenerRegistration = {\n            appId: from.appId,\n            instanceId: from.instanceId ?? 'no-instance-id',\n            channelId: channelId,\n            listenerUuid: sc.createUUID(),\n            contextType: arg0.payload.contextType,\n            userChannelListener: channelType == ChannelType.user\n        }\n\n        this.contextListeners.push(lr)\n        this.invokeEventListeners(channelId, \"onAddContextListener\", \"privateChannelOnAddContextListenerEvent\", sc, arg0.payload.contextType ?? undefined)\n        successResponse(sc, arg0, from, { listenerUUID: lr.listenerUuid }, 'addContextListenerResponse')\n\n    }\n\n    handleBroadcastRequest(arg0: BroadcastRequest, sc: ServerContext<any>, from: AppIdentifier) {\n        const matchingListeners = this.contextListeners\n            .filter(r => r.channelId == arg0.payload.channelId)\n            .filter(r => r.contextType == null || r.contextType == arg0.payload.context.type)\n\n        const matchingApps = matchingListeners\n            .map(r => { return { appId: r.appId, instanceId: r.instanceId } })\n            .filter(onlyUnique)\n\n        matchingApps.forEach(app => {\n            sc.post({\n                meta: {\n                    eventUuid: sc.createUUID(),\n                    timestamp: new Date()\n                },\n                type: 'broadcastEvent',\n                payload: {\n                    channelId: arg0.payload.channelId,\n                    context: arg0.payload.context\n                }\n            }, app.instanceId)\n        })\n\n        this.updateChannelState(arg0.payload.channelId, arg0.payload.context)\n        successResponse(sc, arg0, from, {}, 'broadcastResponse')\n    }\n\n    handleGetCurrentChannelRequest(arg0: GetCurrentChannelRequest, sc: ServerContext<any>, from: AppIdentifier) {\n        const currentChannel = this.getCurrentChannel(from)\n        if (currentChannel) {\n            successResponse(sc, arg0, from, {\n                channel: {\n                    id: currentChannel.id,\n                    type: this.convertChannelTypeToString(currentChannel.type),\n                    displayMetadata: currentChannel.displayMetadata\n                }\n            }, 'getCurrentChannelResponse')\n        } else {\n            successResponse(sc, arg0, from, { channel: null }, 'getCurrentChannelResponse')\n        }\n    }\n\n    handleJoinUserChannelRequest(arg0: JoinUserChannelRequest, sc: ServerContext<any>, from: AppIdentifier) {\n        // check it's a user channel\n        const newChannel = this.getChannelById(arg0.payload.channelId)\n        if ((newChannel == null) || (newChannel.type != ChannelType.user)) {\n            return errorResponse(sc, arg0, from, ChannelError.NoChannelFound, 'joinUserChannelResponse')\n        }\n\n        // join it.  \n        const instanceId = from.instanceId ?? 'no-instance-id'\n        this.currentChannel[instanceId] = newChannel\n        this.moveUserChannelListeners(from, newChannel.id)\n        successResponse(sc, arg0, from, {}, 'joinUserChannelResponse')\n    }\n\n    handleLeaveCurrentChannelRequest(arg0: LeaveCurrentChannelRequest, sc: ServerContext<any>, from: AppIdentifier) {\n        const instanceId = from.instanceId ?? 'no-instance-id'\n        const currentChannel = this.currentChannel[instanceId]\n        if (currentChannel) {\n            delete this.currentChannel[instanceId]\n            this.moveUserChannelListeners(from, null)\n        }\n        successResponse(sc, arg0, from, {}, 'leaveCurrentChannelResponse')\n    }\n\n    handleGetOrCreateRequest(arg0: GetOrCreateChannelRequest, sc: ServerContext<any>, from: AppIdentifier) {\n        const id = arg0.payload.channelId\n        var channel = this.getChannelById(id)\n        if (channel) {\n            if (channel.type != ChannelType.app) {\n                errorResponse(sc, arg0, from, ChannelError.AccessDenied, 'getOrCreateChannelResponse')\n                return\n            }\n        }\n\n        channel = {\n            id: id,\n            type: ChannelType.app,\n            context: [],\n            displayMetadata: {}\n        }\n        this.state.push(channel)\n        successResponse(sc, arg0, from, { channel: { id: channel.id, type: channel.type, } }, 'getOrCreateChannelResponse')\n    }\n\n\n    handleGetUserChannelsRequest(arg0: GetUserChannelsRequest, sc: ServerContext<any>, from: AppIdentifier) {\n        const userChannels = this.state.filter(c => c.type == ChannelType.user)\n        successResponse(sc, arg0, from, { userChannels: userChannels.map(c => ({ id: c.id, type: this.convertChannelTypeToString(c.type), displayMetadata: c.displayMetadata })) }, 'getUserChannelsResponse')\n    }\n\n    handlePrivateChannelAddEventListenerRequest(arg0: PrivateChannelAddEventListenerRequest, from: AppIdentifier, sc: ServerContext<any>) {\n        const channel = this.getChannelById(arg0.payload.privateChannelId)\n\n        if ((channel == null) || (channel.type != ChannelType.private)) {\n            errorResponse(sc, arg0, from, ChannelError.NoChannelFound, 'privateChannelAddEventListenerResponse')\n        } else {\n            const el = {\n                appId: from.appId!!,\n                instanceId: from.instanceId!!,\n                channelId: arg0.payload.privateChannelId,\n                eventType: arg0.payload.listenerType,\n                listenerUuid: sc.createUUID(),\n            } as PrivateChannelEventListener\n            this.eventListeners.push(el)\n            successResponse(sc, arg0, from, { listenerUUID: el.listenerUuid }, 'privateChannelAddEventListenerResponse')\n        }\n    }\n\n    invokeEventListeners(privateChannelId: string | null, eventType: PrivateChannelEventListenerTypes, messageType: NotificationAgentEventMessage, sc: ServerContext<any>, contextType?: string) {\n        if (privateChannelId) {\n            const msg = {\n                type: messageType,\n                meta: {\n                    eventUuid: sc.createUUID(),\n                    timestamp: new Date()\n                },\n                payload: {\n                    privateChannelId,\n                    contextType: contextType\n                }\n            } as AgentEventMessage\n\n            this.eventListeners\n                .filter(e => (e.channelId == privateChannelId) && (e.eventType == eventType))\n                .forEach(e => sc.post(msg, e.instanceId))\n        }\n    }\n\n}\n\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2705309b9725e58e5902072bf29eae01e1083e59","contentHash":"08c056b200975cef74fc609106fb78dc4fcf4865bc71adad368486e7d243f1b4"},"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/da-server/src/handlers/support.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/da-server/src/handlers/support.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":46}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":42}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":78}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":74}},"8":{"start":{"line":15,"column":4},"end":{"line":23,"column":22}},"9":{"start":{"line":26,"column":4},"end":{"line":36,"column":22}},"10":{"start":{"line":42,"column":4},"end":{"line":42,"column":41}}},"fnMap":{"0":{"name":"successResponse","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":24}},"loc":{"start":{"line":8,"column":57},"end":{"line":10,"column":1}},"line":8},"1":{"name":"errorResponse","decl":{"start":{"line":11,"column":9},"end":{"line":11,"column":22}},"loc":{"start":{"line":11,"column":53},"end":{"line":13,"column":1}},"line":11},"2":{"name":"successResponseId","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":26}},"loc":{"start":{"line":14,"column":61},"end":{"line":24,"column":1}},"line":14},"3":{"name":"errorResponseId","decl":{"start":{"line":25,"column":9},"end":{"line":25,"column":24}},"loc":{"start":{"line":25,"column":57},"end":{"line":37,"column":1}},"line":25},"4":{"name":"onlyUnique","decl":{"start":{"line":41,"column":9},"end":{"line":41,"column":19}},"loc":{"start":{"line":41,"column":40},"end":{"line":43,"column":1}},"line":41}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0},"b":{},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/da-server/src/handlers/support.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/packages/da-server/src/handlers/support.ts"],"names":[],"mappings":";;AAIA,0CAEC;AAED,sCAEC;AAED,8CAUC;AAED,0CAYC;AAKD,gCAEC;AAvCD,SAAgB,eAAe,CAAC,EAAsB,EAAE,OAA0B,EAAE,EAAiB,EAAE,OAAY,EAAE,IAAY;IAC7H,OAAO,iBAAiB,CAAC,EAAE,EAAE,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;AAC9E,CAAC;AAED,SAAgB,aAAa,CAAC,EAAsB,EAAE,OAA0B,EAAE,EAAiB,EAAE,KAAa,EAAE,IAAY;IAC5H,OAAO,eAAe,CAAC,EAAE,EAAE,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AAC1E,CAAC;AAED,SAAgB,iBAAiB,CAAC,EAAsB,EAAE,SAAiB,EAAE,EAAiB,EAAE,OAAY,EAAE,IAAY;IACtH,EAAE,CAAC,IAAI,CAAC;QACJ,IAAI,EAAE;YACF,YAAY,EAAE,EAAE,CAAC,UAAU,EAAE;YAC7B,WAAW,EAAE,SAAS;YACtB,SAAS,EAAE,IAAI,IAAI,EAAE;SACxB;QACD,IAAI;QACJ,OAAO;KACc,EAAE,EAAE,CAAC,UAAY,CAAC,CAAA;AAC/C,CAAC;AAED,SAAgB,eAAe,CAAC,EAAsB,EAAE,SAAiB,EAAE,EAAiB,EAAE,KAAa,EAAE,IAAY;IACrH,EAAE,CAAC,IAAI,CAAC;QACJ,IAAI,EAAE;YACF,YAAY,EAAE,EAAE,CAAC,UAAU,EAAE;YAC7B,WAAW,EAAE,SAAS;YACtB,SAAS,EAAE,IAAI,IAAI,EAAE;SACxB;QACD,IAAI;QACJ,OAAO,EAAE;YACL,KAAK;SACR;KACoB,EAAE,EAAE,CAAC,UAAY,CAAC,CAAA;AAC/C,CAAC;AAED;;GAEG;AACH,SAAgB,UAAU,CAAC,KAAU,EAAE,KAAU,EAAE,IAAS;IACxD,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC;AACzC,CAAC","sourcesContent":["import { ServerContext } from \"../ServerContext\";\nimport { AgentResponseMessage, AppIdentifier, AppRequestMessage } from \"@kite9/fdc3-common\";\n\n\nexport function successResponse(sc: ServerContext<any>, request: AppRequestMessage, to: AppIdentifier, payload: any, type: string) {\n    return successResponseId(sc, request.meta.requestUuid, to, payload, type);\n}\n\nexport function errorResponse(sc: ServerContext<any>, request: AppRequestMessage, to: AppIdentifier, error: string, type: string) {\n    return errorResponseId(sc, request.meta.requestUuid, to, error, type);\n}\n\nexport function successResponseId(sc: ServerContext<any>, requestId: string, to: AppIdentifier, payload: any, type: string) {\n    sc.post({\n        meta: {\n            responseUuid: sc.createUUID(),\n            requestUuid: requestId,\n            timestamp: new Date()\n        },\n        type,\n        payload,\n    } as AgentResponseMessage, to.instanceId!!)\n}\n\nexport function errorResponseId(sc: ServerContext<any>, requestId: string, to: AppIdentifier, error: string, type: string) {\n    sc.post({\n        meta: {\n            responseUuid: sc.createUUID(),\n            requestUuid: requestId,\n            timestamp: new Date()\n        },\n        type,\n        payload: {\n            error\n        },\n    } as AgentResponseMessage, to.instanceId!!)\n}\n\n/* \n * from: https://stackoverflow.com/questions/1960473/get-all-unique-values-in-a-javascript-array-remove-duplicates#14438954\n */\nexport function onlyUnique(value: any, index: any, self: any) {\n    return self.indexOf(value) === index;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"658aa54b7aaed0c494c34c505a2e502cb532c209","contentHash":"a4eaba841536ae3c11fc4a349b343384acd898fea6821d967266fdfeb9a92f0b"},"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/da-server/src/handlers/IntentHandler.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/da-server/src/handlers/IntentHandler.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":37}},"3":{"start":{"line":5,"column":18},"end":{"line":5,"column":38}},"4":{"start":{"line":10,"column":16},"end":{"line":24,"column":5}},"5":{"start":{"line":26,"column":4},"end":{"line":26,"column":59}},"6":{"start":{"line":27,"column":4},"end":{"line":27,"column":38}},"7":{"start":{"line":28,"column":4},"end":{"line":33,"column":18}},"8":{"start":{"line":42,"column":15},"end":{"line":42,"column":20}},"9":{"start":{"line":48,"column":8},"end":{"line":48,"column":19}},"10":{"start":{"line":49,"column":8},"end":{"line":49,"column":45}},"11":{"start":{"line":50,"column":8},"end":{"line":50,"column":21}},"12":{"start":{"line":51,"column":8},"end":{"line":51,"column":21}},"13":{"start":{"line":53,"column":8},"end":{"line":58,"column":25}},"14":{"start":{"line":54,"column":12},"end":{"line":57,"column":13}},"15":{"start":{"line":55,"column":16},"end":{"line":55,"column":124}},"16":{"start":{"line":56,"column":16},"end":{"line":56,"column":52}},"17":{"start":{"line":61,"column":8},"end":{"line":65,"column":9}},"18":{"start":{"line":62,"column":12},"end":{"line":62,"column":33}},"19":{"start":{"line":63,"column":12},"end":{"line":63,"column":48}},"20":{"start":{"line":64,"column":12},"end":{"line":64,"column":105}},"21":{"start":{"line":70,"column":11},"end":{"line":70,"column":13}},"22":{"start":{"line":71,"column":21},"end":{"line":71,"column":30}},"23":{"start":{"line":72,"column":25},"end":{"line":72,"column":34}},"24":{"start":{"line":75,"column":8},"end":{"line":75,"column":27}},"25":{"start":{"line":76,"column":8},"end":{"line":76,"column":35}},"26":{"start":{"line":79,"column":21},"end":{"line":79,"column":48}},"27":{"start":{"line":80,"column":8},"end":{"line":83,"column":9}},"28":{"start":{"line":82,"column":12},"end":{"line":82,"column":19}},"29":{"start":{"line":84,"column":8},"end":{"line":95,"column":9}},"30":{"start":{"line":86,"column":48},"end":{"line":86,"column":103}},"31":{"start":{"line":87,"column":38},"end":{"line":87,"column":83}},"32":{"start":{"line":89,"column":45},"end":{"line":89,"column":92}},"33":{"start":{"line":90,"column":53},"end":{"line":90,"column":94}},"34":{"start":{"line":92,"column":39},"end":{"line":92,"column":85}},"35":{"start":{"line":93,"column":49},"end":{"line":93,"column":105}},"36":{"start":{"line":94,"column":40},"end":{"line":94,"column":87}},"37":{"start":{"line":101,"column":26},"end":{"line":101,"column":47}},"38":{"start":{"line":102,"column":19},"end":{"line":102,"column":57}},"39":{"start":{"line":103,"column":8},"end":{"line":115,"column":9}},"40":{"start":{"line":105,"column":12},"end":{"line":107,"column":44}},"41":{"start":{"line":109,"column":12},"end":{"line":109,"column":87}},"42":{"start":{"line":110,"column":12},"end":{"line":110,"column":54}},"43":{"start":{"line":114,"column":12},"end":{"line":114,"column":115}},"44":{"start":{"line":118,"column":19},"end":{"line":118,"column":44}},"45":{"start":{"line":119,"column":19},"end":{"line":119,"column":67}},"46":{"start":{"line":119,"column":46},"end":{"line":119,"column":66}},"47":{"start":{"line":120,"column":8},"end":{"line":126,"column":9}},"48":{"start":{"line":121,"column":12},"end":{"line":121,"column":36}},"49":{"start":{"line":122,"column":12},"end":{"line":122,"column":100}},"50":{"start":{"line":125,"column":12},"end":{"line":125,"column":119}},"51":{"start":{"line":129,"column":19},"end":{"line":134,"column":9}},"52":{"start":{"line":135,"column":8},"end":{"line":135,"column":27}},"53":{"start":{"line":136,"column":8},"end":{"line":138,"column":40}},"54":{"start":{"line":140,"column":8},"end":{"line":145,"column":9}},"55":{"start":{"line":141,"column":12},"end":{"line":141,"column":25}},"56":{"start":{"line":142,"column":12},"end":{"line":144,"column":13}},"57":{"start":{"line":143,"column":16},"end":{"line":143,"column":46}},"58":{"start":{"line":148,"column":8},"end":{"line":148,"column":105}},"59":{"start":{"line":148,"column":35},"end":{"line":148,"column":95}},"60":{"start":{"line":151,"column":8},"end":{"line":151,"column":75}},"61":{"start":{"line":151,"column":57},"end":{"line":151,"column":73}},"62":{"start":{"line":155,"column":19},"end":{"line":155,"column":67}},"63":{"start":{"line":156,"column":8},"end":{"line":156,"column":36}},"64":{"start":{"line":157,"column":8},"end":{"line":157,"column":65}},"65":{"start":{"line":157,"column":44},"end":{"line":157,"column":61}},"66":{"start":{"line":160,"column":8},"end":{"line":168,"column":11}},"67":{"start":{"line":161,"column":12},"end":{"line":167,"column":14}},"68":{"start":{"line":171,"column":8},"end":{"line":174,"column":9}},"69":{"start":{"line":173,"column":12},"end":{"line":173,"column":150}},"70":{"start":{"line":175,"column":38},"end":{"line":175,"column":101}},"71":{"start":{"line":175,"column":55},"end":{"line":175,"column":100}},"72":{"start":{"line":176,"column":8},"end":{"line":179,"column":9}},"73":{"start":{"line":178,"column":12},"end":{"line":178,"column":136}},"74":{"start":{"line":180,"column":8},"end":{"line":183,"column":9}},"75":{"start":{"line":182,"column":12},"end":{"line":182,"column":78}},"76":{"start":{"line":185,"column":8},"end":{"line":185,"column":173}},"77":{"start":{"line":189,"column":28},"end":{"line":189,"column":71}},"78":{"start":{"line":190,"column":8},"end":{"line":192,"column":9}},"79":{"start":{"line":191,"column":12},"end":{"line":191,"column":87}},"80":{"start":{"line":193,"column":8},"end":{"line":203,"column":9}},"81":{"start":{"line":195,"column":31},"end":{"line":195,"column":76}},"82":{"start":{"line":196,"column":12},"end":{"line":202,"column":13}},"83":{"start":{"line":197,"column":16},"end":{"line":197,"column":72}},"84":{"start":{"line":201,"column":16},"end":{"line":201,"column":149}},"85":{"start":{"line":205,"column":27},"end":{"line":205,"column":67}},"86":{"start":{"line":206,"column":8},"end":{"line":216,"column":9}},"87":{"start":{"line":207,"column":12},"end":{"line":209,"column":29}},"88":{"start":{"line":213,"column":12},"end":{"line":215,"column":29}},"89":{"start":{"line":219,"column":21},"end":{"line":219,"column":53}},"90":{"start":{"line":219,"column":45},"end":{"line":219,"column":52}},"91":{"start":{"line":220,"column":27},"end":{"line":220,"column":78}},"92":{"start":{"line":220,"column":52},"end":{"line":220,"column":70}},"93":{"start":{"line":221,"column":8},"end":{"line":221,"column":33}},"94":{"start":{"line":224,"column":30},"end":{"line":224,"column":57}},"95":{"start":{"line":225,"column":32},"end":{"line":225,"column":118}},"96":{"start":{"line":225,"column":50},"end":{"line":225,"column":117}},"97":{"start":{"line":226,"column":34},"end":{"line":226,"column":112}},"98":{"start":{"line":226,"column":59},"end":{"line":226,"column":71}},"99":{"start":{"line":226,"column":93},"end":{"line":226,"column":111}},"100":{"start":{"line":227,"column":27},"end":{"line":240,"column":10}},"101":{"start":{"line":228,"column":44},"end":{"line":228,"column":112}},"102":{"start":{"line":228,"column":73},"end":{"line":228,"column":91}},"103":{"start":{"line":228,"column":103},"end":{"line":228,"column":111}},"104":{"start":{"line":229,"column":32},"end":{"line":229,"column":102}},"105":{"start":{"line":229,"column":59},"end":{"line":229,"column":101}},"106":{"start":{"line":230,"column":12},"end":{"line":239,"column":14}},"107":{"start":{"line":237,"column":58},"end":{"line":237,"column":78}},"108":{"start":{"line":241,"column":8},"end":{"line":244,"column":9}},"109":{"start":{"line":243,"column":12},"end":{"line":243,"column":136}},"110":{"start":{"line":245,"column":8},"end":{"line":260,"column":9}},"111":{"start":{"line":246,"column":33},"end":{"line":246,"column":46}},"112":{"start":{"line":247,"column":12},"end":{"line":259,"column":13}},"113":{"start":{"line":248,"column":38},"end":{"line":248,"column":88}},"114":{"start":{"line":248,"column":68},"end":{"line":248,"column":80}},"115":{"start":{"line":249,"column":16},"end":{"line":258,"column":17}},"116":{"start":{"line":251,"column":20},"end":{"line":251,"column":83}},"117":{"start":{"line":253,"column":21},"end":{"line":258,"column":17}},"118":{"start":{"line":254,"column":20},"end":{"line":257,"column":49}},"119":{"start":{"line":261,"column":8},"end":{"line":271,"column":9}},"120":{"start":{"line":262,"column":12},"end":{"line":264,"column":29}},"121":{"start":{"line":268,"column":12},"end":{"line":270,"column":29}},"122":{"start":{"line":274,"column":30},"end":{"line":280,"column":9}},"123":{"start":{"line":281,"column":23},"end":{"line":281,"column":39}},"124":{"start":{"line":282,"column":8},"end":{"line":290,"column":9}},"125":{"start":{"line":283,"column":12},"end":{"line":283,"column":90}},"126":{"start":{"line":285,"column":13},"end":{"line":290,"column":9}},"127":{"start":{"line":286,"column":12},"end":{"line":286,"column":87}},"128":{"start":{"line":289,"column":12},"end":{"line":289,"column":65}},"129":{"start":{"line":294,"column":30},"end":{"line":294,"column":109}},"130":{"start":{"line":295,"column":34},"end":{"line":295,"column":122}},"131":{"start":{"line":295,"column":68},"end":{"line":295,"column":121}},"132":{"start":{"line":295,"column":86},"end":{"line":295,"column":115}},"133":{"start":{"line":296,"column":39},"end":{"line":304,"column":10}},"134":{"start":{"line":297,"column":12},"end":{"line":303,"column":14}},"135":{"start":{"line":305,"column":8},"end":{"line":307,"column":9}},"136":{"start":{"line":306,"column":12},"end":{"line":306,"column":149}},"137":{"start":{"line":308,"column":23},"end":{"line":308,"column":39}},"138":{"start":{"line":309,"column":8},"end":{"line":317,"column":9}},"139":{"start":{"line":310,"column":12},"end":{"line":310,"column":97}},"140":{"start":{"line":312,"column":13},"end":{"line":317,"column":9}},"141":{"start":{"line":313,"column":12},"end":{"line":313,"column":94}},"142":{"start":{"line":316,"column":12},"end":{"line":316,"column":72}},"143":{"start":{"line":321,"column":28},"end":{"line":321,"column":37}},"144":{"start":{"line":322,"column":22},"end":{"line":322,"column":89}},"145":{"start":{"line":324,"column":22},"end":{"line":324,"column":24}},"146":{"start":{"line":325,"column":8},"end":{"line":343,"column":11}},"147":{"start":{"line":326,"column":29},"end":{"line":326,"column":78}},"148":{"start":{"line":326,"column":46},"end":{"line":326,"column":77}},"149":{"start":{"line":327,"column":12},"end":{"line":342,"column":13}},"150":{"start":{"line":328,"column":16},"end":{"line":328,"column":56}},"151":{"start":{"line":331,"column":16},"end":{"line":341,"column":19}},"152":{"start":{"line":344,"column":8},"end":{"line":346,"column":43}},"153":{"start":{"line":349,"column":48},"end":{"line":349,"column":57}},"154":{"start":{"line":351,"column":22},"end":{"line":357,"column":10}},"155":{"start":{"line":353,"column":12},"end":{"line":356,"column":14}},"156":{"start":{"line":359,"column":22},"end":{"line":369,"column":10}},"157":{"start":{"line":361,"column":12},"end":{"line":363,"column":14}},"158":{"start":{"line":367,"column":28},"end":{"line":367,"column":65}},"159":{"start":{"line":367,"column":45},"end":{"line":367,"column":64}},"160":{"start":{"line":368,"column":12},"end":{"line":368,"column":28}},"161":{"start":{"line":371,"column":35},"end":{"line":371,"column":100}},"162":{"start":{"line":372,"column":28},"end":{"line":372,"column":107}},"163":{"start":{"line":373,"column":8},"end":{"line":381,"column":33}},"164":{"start":{"line":384,"column":27},"end":{"line":384,"column":54}},"165":{"start":{"line":385,"column":25},"end":{"line":385,"column":74}},"166":{"start":{"line":385,"column":47},"end":{"line":385,"column":73}},"167":{"start":{"line":386,"column":8},"end":{"line":386,"column":69}},"168":{"start":{"line":387,"column":23},"end":{"line":387,"column":95}},"169":{"start":{"line":387,"column":44},"end":{"line":387,"column":94}},"170":{"start":{"line":387,"column":65},"end":{"line":387,"column":93}},"171":{"start":{"line":388,"column":8},"end":{"line":388,"column":66}},"172":{"start":{"line":389,"column":8},"end":{"line":389,"column":22}},"173":{"start":{"line":392,"column":0},"end":{"line":392,"column":38}}},"fnMap":{"0":{"name":"forwardRequest","decl":{"start":{"line":9,"column":15},"end":{"line":9,"column":29}},"loc":{"start":{"line":9,"column":48},"end":{"line":34,"column":1}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":43},"end":{"line":59,"column":5}},"line":47},"2":{"name":"(anonymous_2)","decl":{"start":{"line":53,"column":19},"end":{"line":53,"column":20}},"loc":{"start":{"line":53,"column":25},"end":{"line":58,"column":9}},"line":53},"3":{"name":"(anonymous_3)","decl":{"start":{"line":60,"column":4},"end":{"line":60,"column":5}},"loc":{"start":{"line":60,"column":23},"end":{"line":66,"column":5}},"line":60},"4":{"name":"(anonymous_4)","decl":{"start":{"line":74,"column":4},"end":{"line":74,"column":5}},"loc":{"start":{"line":74,"column":30},"end":{"line":77,"column":5}},"line":74},"5":{"name":"(anonymous_5)","decl":{"start":{"line":78,"column":4},"end":{"line":78,"column":5}},"loc":{"start":{"line":78,"column":32},"end":{"line":96,"column":5}},"line":78},"6":{"name":"(anonymous_6)","decl":{"start":{"line":100,"column":4},"end":{"line":100,"column":5}},"loc":{"start":{"line":100,"column":40},"end":{"line":116,"column":5}},"line":100},"7":{"name":"(anonymous_7)","decl":{"start":{"line":117,"column":4},"end":{"line":117,"column":5}},"loc":{"start":{"line":117,"column":34},"end":{"line":127,"column":5}},"line":117},"8":{"name":"(anonymous_8)","decl":{"start":{"line":119,"column":39},"end":{"line":119,"column":40}},"loc":{"start":{"line":119,"column":46},"end":{"line":119,"column":66}},"line":119},"9":{"name":"(anonymous_9)","decl":{"start":{"line":128,"column":4},"end":{"line":128,"column":5}},"loc":{"start":{"line":128,"column":40},"end":{"line":146,"column":5}},"line":128},"10":{"name":"(anonymous_10)","decl":{"start":{"line":147,"column":4},"end":{"line":147,"column":5}},"loc":{"start":{"line":147,"column":40},"end":{"line":149,"column":5}},"line":147},"11":{"name":"(anonymous_11)","decl":{"start":{"line":148,"column":30},"end":{"line":148,"column":31}},"loc":{"start":{"line":148,"column":35},"end":{"line":148,"column":95}},"line":148},"12":{"name":"(anonymous_12)","decl":{"start":{"line":150,"column":4},"end":{"line":150,"column":5}},"loc":{"start":{"line":150,"column":36},"end":{"line":152,"column":5}},"line":150},"13":{"name":"(anonymous_13)","decl":{"start":{"line":151,"column":52},"end":{"line":151,"column":53}},"loc":{"start":{"line":151,"column":57},"end":{"line":151,"column":73}},"line":151},"14":{"name":"(anonymous_14)","decl":{"start":{"line":153,"column":4},"end":{"line":153,"column":5}},"loc":{"start":{"line":153,"column":51},"end":{"line":158,"column":5}},"line":153},"15":{"name":"(anonymous_15)","decl":{"start":{"line":157,"column":36},"end":{"line":157,"column":37}},"loc":{"start":{"line":157,"column":42},"end":{"line":157,"column":63}},"line":157},"16":{"name":"(anonymous_16)","decl":{"start":{"line":159,"column":4},"end":{"line":159,"column":5}},"loc":{"start":{"line":159,"column":33},"end":{"line":169,"column":5}},"line":159},"17":{"name":"(anonymous_17)","decl":{"start":{"line":160,"column":22},"end":{"line":160,"column":23}},"loc":{"start":{"line":160,"column":27},"end":{"line":168,"column":9}},"line":160},"18":{"name":"(anonymous_18)","decl":{"start":{"line":170,"column":4},"end":{"line":170,"column":5}},"loc":{"start":{"line":170,"column":65},"end":{"line":186,"column":5}},"line":170},"19":{"name":"(anonymous_19)","decl":{"start":{"line":175,"column":50},"end":{"line":175,"column":51}},"loc":{"start":{"line":175,"column":55},"end":{"line":175,"column":100}},"line":175},"20":{"name":"(anonymous_20)","decl":{"start":{"line":187,"column":4},"end":{"line":187,"column":5}},"loc":{"start":{"line":187,"column":62},"end":{"line":217,"column":5}},"line":187},"21":{"name":"(anonymous_21)","decl":{"start":{"line":218,"column":4},"end":{"line":218,"column":5}},"loc":{"start":{"line":218,"column":26},"end":{"line":222,"column":5}},"line":218},"22":{"name":"(anonymous_22)","decl":{"start":{"line":219,"column":40},"end":{"line":219,"column":41}},"loc":{"start":{"line":219,"column":45},"end":{"line":219,"column":52}},"line":219},"23":{"name":"(anonymous_23)","decl":{"start":{"line":220,"column":39},"end":{"line":220,"column":40}},"loc":{"start":{"line":220,"column":52},"end":{"line":220,"column":70}},"line":220},"24":{"name":"(anonymous_24)","decl":{"start":{"line":223,"column":4},"end":{"line":223,"column":5}},"loc":{"start":{"line":223,"column":40},"end":{"line":272,"column":5}},"line":223},"25":{"name":"(anonymous_25)","decl":{"start":{"line":225,"column":45},"end":{"line":225,"column":46}},"loc":{"start":{"line":225,"column":50},"end":{"line":225,"column":117}},"line":225},"26":{"name":"(anonymous_26)","decl":{"start":{"line":226,"column":54},"end":{"line":226,"column":55}},"loc":{"start":{"line":226,"column":59},"end":{"line":226,"column":71}},"line":226},"27":{"name":"(anonymous_27)","decl":{"start":{"line":226,"column":80},"end":{"line":226,"column":81}},"loc":{"start":{"line":226,"column":93},"end":{"line":226,"column":111}},"line":226},"28":{"name":"(anonymous_28)","decl":{"start":{"line":227,"column":49},"end":{"line":227,"column":50}},"loc":{"start":{"line":227,"column":54},"end":{"line":240,"column":9}},"line":227},"29":{"name":"(anonymous_29)","decl":{"start":{"line":228,"column":67},"end":{"line":228,"column":68}},"loc":{"start":{"line":228,"column":73},"end":{"line":228,"column":91}},"line":228},"30":{"name":"(anonymous_30)","decl":{"start":{"line":228,"column":97},"end":{"line":228,"column":98}},"loc":{"start":{"line":228,"column":103},"end":{"line":228,"column":111}},"line":228},"31":{"name":"(anonymous_31)","decl":{"start":{"line":229,"column":53},"end":{"line":229,"column":54}},"loc":{"start":{"line":229,"column":59},"end":{"line":229,"column":101}},"line":229},"32":{"name":"(anonymous_32)","decl":{"start":{"line":237,"column":51},"end":{"line":237,"column":52}},"loc":{"start":{"line":237,"column":56},"end":{"line":237,"column":80}},"line":237},"33":{"name":"(anonymous_33)","decl":{"start":{"line":248,"column":63},"end":{"line":248,"column":64}},"loc":{"start":{"line":248,"column":68},"end":{"line":248,"column":80}},"line":248},"34":{"name":"(anonymous_34)","decl":{"start":{"line":273,"column":4},"end":{"line":273,"column":5}},"loc":{"start":{"line":273,"column":45},"end":{"line":291,"column":5}},"line":273},"35":{"name":"(anonymous_35)","decl":{"start":{"line":292,"column":4},"end":{"line":292,"column":5}},"loc":{"start":{"line":292,"column":55},"end":{"line":318,"column":5}},"line":292},"36":{"name":"(anonymous_36)","decl":{"start":{"line":295,"column":55},"end":{"line":295,"column":56}},"loc":{"start":{"line":295,"column":68},"end":{"line":295,"column":121}},"line":295},"37":{"name":"(anonymous_37)","decl":{"start":{"line":295,"column":80},"end":{"line":295,"column":81}},"loc":{"start":{"line":295,"column":86},"end":{"line":295,"column":115}},"line":295},"38":{"name":"(anonymous_38)","decl":{"start":{"line":296,"column":61},"end":{"line":296,"column":62}},"loc":{"start":{"line":296,"column":66},"end":{"line":304,"column":9}},"line":296},"39":{"name":"(anonymous_39)","decl":{"start":{"line":319,"column":4},"end":{"line":319,"column":5}},"loc":{"start":{"line":319,"column":51},"end":{"line":347,"column":5}},"line":319},"40":{"name":"(anonymous_40)","decl":{"start":{"line":325,"column":22},"end":{"line":325,"column":23}},"loc":{"start":{"line":325,"column":28},"end":{"line":343,"column":9}},"line":325},"41":{"name":"(anonymous_41)","decl":{"start":{"line":326,"column":40},"end":{"line":326,"column":41}},"loc":{"start":{"line":326,"column":46},"end":{"line":326,"column":77}},"line":326},"42":{"name":"(anonymous_42)","decl":{"start":{"line":348,"column":4},"end":{"line":348,"column":5}},"loc":{"start":{"line":348,"column":41},"end":{"line":382,"column":5}},"line":348},"43":{"name":"(anonymous_43)","decl":{"start":{"line":352,"column":17},"end":{"line":352,"column":18}},"loc":{"start":{"line":352,"column":23},"end":{"line":357,"column":9}},"line":352},"44":{"name":"(anonymous_44)","decl":{"start":{"line":360,"column":17},"end":{"line":360,"column":18}},"loc":{"start":{"line":360,"column":22},"end":{"line":364,"column":9}},"line":360},"45":{"name":"(anonymous_45)","decl":{"start":{"line":365,"column":20},"end":{"line":365,"column":21}},"loc":{"start":{"line":365,"column":25},"end":{"line":369,"column":9}},"line":365},"46":{"name":"(anonymous_46)","decl":{"start":{"line":367,"column":39},"end":{"line":367,"column":40}},"loc":{"start":{"line":367,"column":45},"end":{"line":367,"column":64}},"line":367},"47":{"name":"(anonymous_47)","decl":{"start":{"line":383,"column":4},"end":{"line":383,"column":5}},"loc":{"start":{"line":383,"column":44},"end":{"line":390,"column":5}},"line":383},"48":{"name":"(anonymous_48)","decl":{"start":{"line":385,"column":42},"end":{"line":385,"column":43}},"loc":{"start":{"line":385,"column":47},"end":{"line":385,"column":73}},"line":385},"49":{"name":"(anonymous_49)","decl":{"start":{"line":387,"column":39},"end":{"line":387,"column":40}},"loc":{"start":{"line":387,"column":44},"end":{"line":387,"column":94}},"line":387},"50":{"name":"(anonymous_50)","decl":{"start":{"line":387,"column":60},"end":{"line":387,"column":61}},"loc":{"start":{"line":387,"column":65},"end":{"line":387,"column":93}},"line":387}},"branchMap":{"0":{"loc":{"start":{"line":54,"column":12},"end":{"line":57,"column":13}},"type":"if","locations":[{"start":{"line":54,"column":12},"end":{"line":57,"column":13}},{"start":{"line":54,"column":12},"end":{"line":57,"column":13}}],"line":54},"1":{"loc":{"start":{"line":61,"column":8},"end":{"line":65,"column":9}},"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":65,"column":9}},{"start":{"line":61,"column":8},"end":{"line":65,"column":9}}],"line":61},"2":{"loc":{"start":{"line":61,"column":12},"end":{"line":61,"column":85}},"type":"binary-expr","locations":[{"start":{"line":61,"column":13},"end":{"line":61,"column":46}},{"start":{"line":61,"column":52},"end":{"line":61,"column":84}}],"line":61},"3":{"loc":{"start":{"line":80,"column":8},"end":{"line":83,"column":9}},"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":83,"column":9}},{"start":{"line":80,"column":8},"end":{"line":83,"column":9}}],"line":80},"4":{"loc":{"start":{"line":84,"column":8},"end":{"line":95,"column":9}},"type":"switch","locations":[{"start":{"line":86,"column":12},"end":{"line":86,"column":103}},{"start":{"line":87,"column":12},"end":{"line":87,"column":83}},{"start":{"line":89,"column":12},"end":{"line":89,"column":92}},{"start":{"line":90,"column":12},"end":{"line":90,"column":94}},{"start":{"line":92,"column":12},"end":{"line":92,"column":85}},{"start":{"line":93,"column":12},"end":{"line":93,"column":105}},{"start":{"line":94,"column":12},"end":{"line":94,"column":87}}],"line":84},"5":{"loc":{"start":{"line":103,"column":8},"end":{"line":115,"column":9}},"type":"if","locations":[{"start":{"line":103,"column":8},"end":{"line":115,"column":9}},{"start":{"line":103,"column":8},"end":{"line":115,"column":9}}],"line":103},"6":{"loc":{"start":{"line":120,"column":8},"end":{"line":126,"column":9}},"type":"if","locations":[{"start":{"line":120,"column":8},"end":{"line":126,"column":9}},{"start":{"line":120,"column":8},"end":{"line":126,"column":9}}],"line":120},"7":{"loc":{"start":{"line":142,"column":12},"end":{"line":144,"column":13}},"type":"if","locations":[{"start":{"line":142,"column":12},"end":{"line":144,"column":13}},{"start":{"line":142,"column":12},"end":{"line":144,"column":13}}],"line":142},"8":{"loc":{"start":{"line":148,"column":35},"end":{"line":148,"column":95}},"type":"binary-expr","locations":[{"start":{"line":148,"column":36},"end":{"line":148,"column":62}},{"start":{"line":148,"column":68},"end":{"line":148,"column":94}}],"line":148},"9":{"loc":{"start":{"line":171,"column":8},"end":{"line":174,"column":9}},"type":"if","locations":[{"start":{"line":171,"column":8},"end":{"line":174,"column":9}},{"start":{"line":171,"column":8},"end":{"line":174,"column":9}}],"line":171},"10":{"loc":{"start":{"line":176,"column":8},"end":{"line":179,"column":9}},"type":"if","locations":[{"start":{"line":176,"column":8},"end":{"line":179,"column":9}},{"start":{"line":176,"column":8},"end":{"line":179,"column":9}}],"line":176},"11":{"loc":{"start":{"line":180,"column":8},"end":{"line":183,"column":9}},"type":"if","locations":[{"start":{"line":180,"column":8},"end":{"line":183,"column":9}},{"start":{"line":180,"column":8},"end":{"line":183,"column":9}}],"line":180},"12":{"loc":{"start":{"line":190,"column":8},"end":{"line":192,"column":9}},"type":"if","locations":[{"start":{"line":190,"column":8},"end":{"line":192,"column":9}},{"start":{"line":190,"column":8},"end":{"line":192,"column":9}}],"line":190},"13":{"loc":{"start":{"line":193,"column":8},"end":{"line":203,"column":9}},"type":"if","locations":[{"start":{"line":193,"column":8},"end":{"line":203,"column":9}},{"start":{"line":193,"column":8},"end":{"line":203,"column":9}}],"line":193},"14":{"loc":{"start":{"line":193,"column":12},"end":{"line":193,"column":59}},"type":"binary-expr","locations":[{"start":{"line":193,"column":13},"end":{"line":193,"column":36}},{"start":{"line":193,"column":42},"end":{"line":193,"column":58}}],"line":193},"15":{"loc":{"start":{"line":196,"column":12},"end":{"line":202,"column":13}},"type":"if","locations":[{"start":{"line":196,"column":12},"end":{"line":202,"column":13}},{"start":{"line":196,"column":12},"end":{"line":202,"column":13}}],"line":196},"16":{"loc":{"start":{"line":206,"column":8},"end":{"line":216,"column":9}},"type":"if","locations":[{"start":{"line":206,"column":8},"end":{"line":216,"column":9}},{"start":{"line":206,"column":8},"end":{"line":216,"column":9}}],"line":206},"17":{"loc":{"start":{"line":241,"column":8},"end":{"line":244,"column":9}},"type":"if","locations":[{"start":{"line":241,"column":8},"end":{"line":244,"column":9}},{"start":{"line":241,"column":8},"end":{"line":244,"column":9}}],"line":241},"18":{"loc":{"start":{"line":245,"column":8},"end":{"line":260,"column":9}},"type":"if","locations":[{"start":{"line":245,"column":8},"end":{"line":260,"column":9}},{"start":{"line":245,"column":8},"end":{"line":260,"column":9}}],"line":245},"19":{"loc":{"start":{"line":247,"column":12},"end":{"line":259,"column":13}},"type":"if","locations":[{"start":{"line":247,"column":12},"end":{"line":259,"column":13}},{"start":{"line":247,"column":12},"end":{"line":259,"column":13}}],"line":247},"20":{"loc":{"start":{"line":249,"column":16},"end":{"line":258,"column":17}},"type":"if","locations":[{"start":{"line":249,"column":16},"end":{"line":258,"column":17}},{"start":{"line":249,"column":16},"end":{"line":258,"column":17}}],"line":249},"21":{"loc":{"start":{"line":253,"column":21},"end":{"line":258,"column":17}},"type":"if","locations":[{"start":{"line":253,"column":21},"end":{"line":258,"column":17}},{"start":{"line":253,"column":21},"end":{"line":258,"column":17}}],"line":253},"22":{"loc":{"start":{"line":261,"column":8},"end":{"line":271,"column":9}},"type":"if","locations":[{"start":{"line":261,"column":8},"end":{"line":271,"column":9}},{"start":{"line":261,"column":8},"end":{"line":271,"column":9}}],"line":261},"23":{"loc":{"start":{"line":282,"column":8},"end":{"line":290,"column":9}},"type":"if","locations":[{"start":{"line":282,"column":8},"end":{"line":290,"column":9}},{"start":{"line":282,"column":8},"end":{"line":290,"column":9}}],"line":282},"24":{"loc":{"start":{"line":285,"column":13},"end":{"line":290,"column":9}},"type":"if","locations":[{"start":{"line":285,"column":13},"end":{"line":290,"column":9}},{"start":{"line":285,"column":13},"end":{"line":290,"column":9}}],"line":285},"25":{"loc":{"start":{"line":305,"column":8},"end":{"line":307,"column":9}},"type":"if","locations":[{"start":{"line":305,"column":8},"end":{"line":307,"column":9}},{"start":{"line":305,"column":8},"end":{"line":307,"column":9}}],"line":305},"26":{"loc":{"start":{"line":309,"column":8},"end":{"line":317,"column":9}},"type":"if","locations":[{"start":{"line":309,"column":8},"end":{"line":317,"column":9}},{"start":{"line":309,"column":8},"end":{"line":317,"column":9}}],"line":309},"27":{"loc":{"start":{"line":312,"column":13},"end":{"line":317,"column":9}},"type":"if","locations":[{"start":{"line":312,"column":13},"end":{"line":317,"column":9}},{"start":{"line":312,"column":13},"end":{"line":317,"column":9}}],"line":312},"28":{"loc":{"start":{"line":327,"column":12},"end":{"line":342,"column":13}},"type":"if","locations":[{"start":{"line":327,"column":12},"end":{"line":342,"column":13}},{"start":{"line":327,"column":12},"end":{"line":342,"column":13}}],"line":327},"29":{"loc":{"start":{"line":334,"column":37},"end":{"line":334,"column":68}},"type":"binary-expr","locations":[{"start":{"line":334,"column":37},"end":{"line":334,"column":51}},{"start":{"line":334,"column":55},"end":{"line":334,"column":68}}],"line":334},"30":{"loc":{"start":{"line":372,"column":28},"end":{"line":372,"column":107}},"type":"cond-expr","locations":[{"start":{"line":372,"column":62},"end":{"line":372,"column":95}},{"start":{"line":372,"column":98},"end":{"line":372,"column":107}}],"line":372}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":70,"22":70,"23":70,"24":70,"25":70,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":70,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0,0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/da-server/src/handlers/IntentHandler.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/packages/da-server/src/handlers/IntentHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import { MessageHandler } from \"../BasicFDC3Server\";\nimport { InstanceID, ServerContext } from \"../ServerContext\";\nimport { Directory } from \"../directory/DirectoryInterface\";\nimport { AppIntent, ResolveError } from \"@finos/fdc3\";\nimport {\n    AddIntentListenerRequest,\n    FindIntentRequest, FindIntentsByContextRequest,\n    IntentEvent,\n    IntentListenerUnsubscribeRequest,\n    RaiseIntentRequest, RaiseIntentForContextRequest,\n    IntentResultRequest,\n    AppIdentifier,\n    Context\n} from \"@kite9/fdc3-common\";\nimport { errorResponse, errorResponseId, successResponse, successResponseId } from \"./support\";\n\n\ntype ListenerRegistration = {\n    appId: string | undefined,\n    instanceId: string | undefined,\n    intentName: string | undefined,\n    listenerUUID: string\n}\n\ntype IntentRequest = {\n    intent: string,\n    context: Context,\n    requestUuid: string,\n    from: AppIdentifier,\n    type: 'raiseIntentResponse' | 'raiseIntentForContextResponse'\n}\n\n\n/**\n * Re-writes the request to forward it on to the target application\n */\nasync function forwardRequest(arg0: IntentRequest, to: AppIdentifier, sc: ServerContext<any>, ih: IntentHandler): Promise<void> {\n    const out: IntentEvent = {\n        type: 'intentEvent',\n        payload: {\n            context: arg0.context,\n            intent: arg0.intent,\n            originatingApp: {\n                appId: arg0.from.appId,\n                instanceId: arg0.from.instanceId\n            }\n        },\n        meta: {\n            eventUuid: arg0.requestUuid,\n            timestamp: new Date()\n        }\n    }\n\n    // register the resolution destination\n    ih.pendingResolutions.set(arg0.requestUuid, arg0.from)\n    await sc.post(out, to.instanceId!!)\n    successResponseId(sc, arg0.requestUuid, arg0.from, {\n        intentResolution: {\n            intent: arg0.intent,\n            source: to\n        }\n    }, arg0.type)\n}\n\n/**\n * A pending intent is one for an app that hasn't registered it's intent listener yet.\n * (Possibly it is being opened)\n * \n * Pending intents wait for that registration and then message the app.\n */\nclass PendingIntent {\n\n    complete: boolean = false\n    r: IntentRequest\n    expectingAppId: string\n    sc: ServerContext<any>\n    ih: IntentHandler\n\n    constructor(r: IntentRequest, sc: ServerContext<any>, ih: IntentHandler, expectingAppId: string) {\n        this.r = r\n        this.expectingAppId = expectingAppId\n        this.sc = sc\n        this.ih = ih\n\n        // handle the timeout\n        setTimeout(() => {\n            if (!this.complete) {\n                errorResponseId(sc, r.requestUuid, r.from, ResolveError.IntentDeliveryFailed, r.type)\n                this.ih.pendingIntents.delete(this)\n            }\n        }, ih.timeoutMs)\n    }\n\n    async accept(arg0: ListenerRegistration): Promise<void> {\n        if ((arg0.appId == this.expectingAppId) && (arg0.intentName == this.r.intent)) {\n            this.complete = true\n            this.ih.pendingIntents.delete(this)\n            forwardRequest(this.r, { appId: arg0.appId, instanceId: arg0.instanceId }, this.sc, this.ih)\n        }\n    }\n}\n\nexport class IntentHandler implements MessageHandler {\n\n    private readonly directory: Directory\n    private readonly regs: ListenerRegistration[] = []\n    readonly pendingIntents: Set<PendingIntent> = new Set()\n    readonly pendingResolutions: Map<string, AppIdentifier> = new Map()\n    readonly timeoutMs: number\n\n    constructor(d: Directory, timeoutMs: number) {\n        this.directory = d\n        this.timeoutMs = timeoutMs\n    }\n\n    async accept(msg: any, sc: ServerContext<any>, uuid: InstanceID): Promise<void> {\n        const from = sc.getInstanceDetails(uuid)\n\n        if (from == null) {\n            // this handler only deals with connected apps\n            return\n        }\n\n        switch (msg.type as string) {\n            // finding intents\n            case 'findIntentsByContextRequest': return this.findIntentsByContextRequest(msg as FindIntentsByContextRequest, sc, from)\n            case 'findIntentRequest': return this.findIntentRequest(msg as FindIntentRequest, sc, from)\n\n            // listeners\n            case 'addIntentListenerRequest': return this.onAddIntentListener(msg as AddIntentListenerRequest, sc, from)\n            case 'intentListenerUnsubscribeRequest': return this.onUnsubscribe(msg as IntentListenerUnsubscribeRequest, sc, from)\n\n            // raising intents and returning results\n            case 'raiseIntentRequest': return this.raiseIntentRequest(msg as RaiseIntentRequest, sc, from)\n            case 'raiseIntentForContextRequest': return this.raiseIntentForContextRequest(msg as RaiseIntentForContextRequest, sc, from)\n            case 'intentResultRequest': return this.intentResultRequest(msg as IntentResultRequest, sc, from)\n        }\n    }\n\n    /**\n     * Called when target app handles an intent\n     */\n    intentResultRequest(arg0: IntentResultRequest, sc: ServerContext<any>, from: AppIdentifier): void | PromiseLike<void> {\n        const requestId = arg0.meta.requestUuid\n        const to = this.pendingResolutions.get(requestId)\n        if (to) {\n            // post the result to the app that raised the intent\n            successResponse(sc, arg0, to!!, {\n                intentResult: arg0.payload.intentResult\n            }, 'raiseIntentResultResponse')\n\n            // respond to the app that handled the intent\n            successResponse(sc, arg0, from, {}, 'intentResultResponse')\n            this.pendingResolutions.delete(requestId)\n        } else {\n            // no-one waiting for this result\n            errorResponse(sc, arg0, from, \"No-one waiting for this result\", 'intentResultResponse')\n        }\n    }\n\n    onUnsubscribe(arg0: IntentListenerUnsubscribeRequest, sc: ServerContext<any>, from: AppIdentifier): void {\n        const id = arg0.payload.listenerUUID\n        const fi = this.regs.findIndex((e) => e.listenerUUID == id)\n        if (fi > -1) {\n            this.regs.splice(fi, 1)\n            successResponse(sc, arg0, from, {}, 'intentListenerUnsubscribeResponse')\n        } else {\n            errorResponse(sc, arg0, from, \"Non-Existent Listener\", 'intentListenerUnsubscribeResponse')\n        }\n    }\n\n    onAddIntentListener(arg0: AddIntentListenerRequest, sc: ServerContext<any>, from: AppIdentifier): void {\n        const lr = {\n            appId: from.appId,\n            instanceId: from.instanceId,\n            intentName: arg0.payload.intent,\n            listenerUUID: sc.createUUID()\n        } as ListenerRegistration\n\n        this.regs.push(lr)\n        successResponse(sc, arg0, from, {\n            listenerUUID: lr.listenerUUID\n        }, 'addIntentListenerResponse')\n\n        // see if this intent listener is the destination for any pending intents\n        for (let x of this.pendingIntents) {\n            x.accept(lr)\n            if (x.complete) {\n                this.pendingIntents.delete(x)\n            }\n        }\n    }\n\n    hasListener(instanceId: string, intentName: string): boolean {\n        return this.regs.find(r => (r.instanceId == instanceId) && (r.intentName == intentName)) != null\n    }\n\n    async getRunningApps(appId: string, sc: ServerContext<any>): Promise<AppIdentifier[]> {\n        return (await sc.getConnectedApps()).filter(a => a.appId == appId)\n    }\n\n    async startWithPendingIntent(arg0: IntentRequest, sc: ServerContext<any>, target: AppIdentifier): Promise<void> {\n        // app exists but needs starting\n        const pi = new PendingIntent(arg0, sc, this, target?.appId!!)\n        this.pendingIntents.add(pi)\n        sc.open(target?.appId!!).then(() => { return undefined })\n    }\n\n    createAppIntents(ir: IntentRequest[], target: AppIdentifier[]): AppIntent[] {\n        return ir.map(r => {\n            return {\n                intent: {\n                    name: r.intent,\n                    displayName: r.intent\n                },\n                apps: target\n            }\n        })\n    }\n\n    async raiseIntentRequestToSpecificInstance(arg0: IntentRequest[], sc: ServerContext<any>, target: AppIdentifier): Promise<void> {\n        if (!(await sc.isAppConnected(target))) {\n            // instance doesn't exist\n            return errorResponseId(sc, arg0[0].requestUuid, arg0[0].from, ResolveError.TargetInstanceUnavailable, arg0[0].type)\n        }\n\n        const requestsWithListeners = arg0.filter(r => this.hasListener(target.instanceId!!, r.intent))\n\n        if (requestsWithListeners.length == 0) {\n            // intent not handled (no listener registered)\n            return errorResponseId(sc, arg0[0].requestUuid, arg0[0].from, ResolveError.NoAppsFound, arg0[0].type)\n        }\n\n        if (requestsWithListeners.length == 1) {\n            // ok, deliver to the current running app.\n            return forwardRequest(requestsWithListeners[0], target, sc, this)\n        }\n\n        // in this case, we are raisingIntentForContext, and there are multiple listeners on this instance \n        return successResponseId(sc, arg0[0].requestUuid, arg0[0].from, { appIntents: this.createAppIntents(requestsWithListeners, [target]) }, arg0[0].type)\n    }\n\n    async raiseIntentRequestToSpecificAppId(arg0: IntentRequest[], sc: ServerContext<any>, target: AppIdentifier): Promise<void> {\n        // dealing with a specific app, which may or may not be open\n        const runningApps = await this.getRunningApps(target.appId, sc)\n\n        if (runningApps.length == 1) {\n            return this.raiseIntentRequestToSpecificInstance(arg0, sc, runningApps[0])\n        }\n\n        if ((runningApps.length == 0) && (arg0.length == 1)) {\n            // ok, start the app if it exists\n            const appRecords = this.directory.retrieveAppsById(target.appId)\n            if (appRecords.length >= 1) {\n                return this.startWithPendingIntent(arg0[0], sc, target)\n            } else {\n                // app doesn't exist\n                return errorResponseId(sc, arg0[0].requestUuid, arg0[0].from, ResolveError.TargetAppUnavailable, arg0[0].type)\n            }\n        }\n\n        // need to use the resolver to choose a running app instance\n        const appIntents = this.createAppIntents(arg0, runningApps)\n\n        if (arg0[0].type == 'raiseIntentResponse') {\n            return successResponseId(sc, arg0[0].requestUuid, arg0[0].from, {\n                appIntent: appIntents[0]\n            }, arg0[0].type)\n        } else {\n            // raise intent for context\n            return successResponseId(sc, arg0[0].requestUuid, arg0[0].from, {\n                appIntents: appIntents\n            }, arg0[0].type)\n        }\n    }\n\n    oneAppOnly(appIntent: AppIntent): boolean {\n        const apps = appIntent.apps.map(a => a.appId)\n        const uniqueApps = apps.filter((v, i, a) => a.indexOf(v) === i).length\n        return (uniqueApps == 1)\n    }\n\n    async raiseIntentToAnyApp(arg0: IntentRequest[], sc: ServerContext<any>): Promise<void> {\n        const connectedApps = await sc.getConnectedApps()\n        const matchingIntents = arg0.flatMap(i => this.directory.retrieveIntents(i.context.type, i.intent, undefined))\n        const uniqueIntentNames = matchingIntents.map(i => i.intentName).filter((v, i, a) => a.indexOf(v) === i)\n\n        const appIntents: AppIntent[] = uniqueIntentNames.map(i => {\n            const directoryAppsWithIntent = matchingIntents.filter(mi => mi.intentName == i).map(mi => mi.appId)\n            const runningApps = connectedApps.filter(ca => directoryAppsWithIntent.includes(ca.appId))\n\n            return {\n                intent: {\n                    name: i,\n                    displayName: i\n                },\n                apps: [\n                    ...runningApps,\n                    ...directoryAppsWithIntent.map(d => { return { appId: d } })\n                ]\n            }\n        })\n\n        if (appIntents.length == 0) {\n            // nothing can resolve the intent, fail\n            return errorResponseId(sc, arg0[0].requestUuid, arg0[0].from, ResolveError.NoAppsFound, arg0[0].type)\n        }\n\n        if (appIntents.length == 1) {\n            const theAppIntent = appIntents[0]\n            if (this.oneAppOnly(theAppIntent)) {\n                const instanceCount = theAppIntent.apps.filter(a => a.instanceId).length\n                if (instanceCount == 1) {\n                    // app is running\n                    return forwardRequest(arg0[0], theAppIntent.apps[0], sc, this)\n                } else if (instanceCount == 0) {\n                    return this.startWithPendingIntent({\n                        ...arg0[0],\n                        intent: theAppIntent.intent.name\n                    }, sc, theAppIntent.apps[0])\n                }\n            }\n        }\n\n        if (arg0[0].type == 'raiseIntentResponse') {\n            return successResponseId(sc, arg0[0].requestUuid, arg0[0].from, {\n                appIntent: appIntents[0]\n            }, arg0[0].type)\n        } else {\n            // raise intent for context\n            return successResponseId(sc, arg0[0].requestUuid, arg0[0].from, {\n                appIntents: appIntents\n            }, arg0[0].type)\n        }\n\n    }\n\n    async raiseIntentRequest(arg0: RaiseIntentRequest, sc: ServerContext<any>, from: AppIdentifier): Promise<void> {\n        const intentRequest: IntentRequest = {\n            context: arg0.payload.context,\n            from,\n            intent: arg0.payload.intent,\n            requestUuid: arg0.meta.requestUuid,\n            type: 'raiseIntentResponse'\n        }\n\n        const target = arg0.payload.app!!\n        if (target?.instanceId) {\n            return this.raiseIntentRequestToSpecificInstance([intentRequest], sc, target)\n        } else if (target?.appId) {\n            return this.raiseIntentRequestToSpecificAppId([intentRequest], sc, target)\n        } else {\n            return this.raiseIntentToAnyApp([intentRequest], sc)\n        }\n    }\n\n    async raiseIntentForContextRequest(arg0: RaiseIntentForContextRequest, sc: ServerContext<any>, from: AppIdentifier): Promise<void> {\n        // dealing with a specific instance of an app\n        const mappedIntents = this.directory.retrieveIntents(arg0.payload.context.type, undefined, undefined)\n        const uniqueIntentNames = mappedIntents.filter((v, i, a) => a.findIndex(v2 => v2.intentName == v.intentName) == i)\n        const possibleIntentRequests: IntentRequest[] = uniqueIntentNames.map(i => {\n            return {\n                context: arg0.payload.context,\n                from,\n                intent: i.intentName,\n                requestUuid: arg0.meta.requestUuid,\n                type: 'raiseIntentForContextResponse'\n            }\n        })\n\n        if (possibleIntentRequests.length == 0) {\n            return errorResponseId(sc, arg0.meta.requestUuid, from, ResolveError.NoAppsFound, 'raiseIntentForContextResponse')\n        }\n\n        const target = arg0.payload.app!!\n        if (target?.instanceId) {\n            return this.raiseIntentRequestToSpecificInstance(possibleIntentRequests, sc, target)\n        } else if (target?.appId) {\n            return this.raiseIntentRequestToSpecificAppId(possibleIntentRequests, sc, target)\n        } else {\n            return this.raiseIntentToAnyApp(possibleIntentRequests, sc)\n        }\n    }\n\n    async findIntentsByContextRequest(r: FindIntentsByContextRequest, sc: ServerContext<any>, from: AppIdentifier): Promise<void> {\n\n        // TODO: Add result type\n        const { context } = r.payload\n\n        const apps1 = this.directory.retrieveIntents(context?.type, undefined, undefined)\n\n        // fold apps so same intents aren't duplicated\n        const apps2: AppIntent[] = []\n        apps1.forEach(a1 => {\n            const existing = apps2.find(a2 => a2.intent.name == a1.intentName)\n            if (existing) {\n                existing.apps.push({ appId: a1.appId })\n            } else {\n                apps2.push({\n                    intent: {\n                        name: a1.intentName,\n                        displayName: a1.displayName ?? a1.intentName\n                    },\n                    apps: [\n                        {\n                            appId: a1.appId\n                        }\n                    ]\n                })\n            }\n        })\n\n        successResponse(sc, r, from, {\n            appIntents: apps2\n        }, 'findIntentsByContextResponse')\n    }\n\n\n    async findIntentRequest(r: FindIntentRequest, sc: ServerContext<any>, from: AppIdentifier): Promise<void> {\n        const { intent, context, resultType } = r.payload\n\n        // listeners for connected applications\n        const apps2 = (await this.retrieveListeners(intent, sc))\n            .map(lr => {\n                return {\n                    appId: lr.appId,\n                    instanceId: lr.instanceId\n                }\n            }) as AppIdentifier[]\n\n        // directory entries\n        const apps1 = this.directory.retrieveApps(context?.type, intent, resultType)\n            .map(a => {\n                return {\n                    appId: a.appId,\n                }\n            })\n            .filter(i => {\n                // remove any directory entries that are already started\n                const running = apps2.find(i2 => i2.appId == i.appId)\n                return !running\n            }) as AppIdentifier[]\n\n        // just need this for the (deprecated) display name\n        const allMatchingIntents = this.directory.retrieveIntents(context?.type, intent, resultType)\n        const displayName = (allMatchingIntents.length > 0) ? allMatchingIntents[0].displayName : undefined\n\n        successResponse(sc, r, from, {\n            appIntent: {\n                intent: {\n                    name: intent,\n                    displayName\n                },\n                apps: [...apps1, ...apps2]\n            }\n        }, 'findIntentResponse')\n    }\n\n    async retrieveListeners(intentName: string | undefined, sc: ServerContext<any>): Promise<ListenerRegistration[]> {\n        const activeApps = await sc.getConnectedApps()\n        const matching = this.regs.filter(r => r.intentName == intentName)\n\n        console.log(`Matched listeners returned ${matching.length}`)\n        const active = matching.filter(r => activeApps.find(a => a.instanceId == r.instanceId))\n        console.log(`Active listeners returned ${active.length}`)\n\n        return active\n    }\n\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e5b47800ec0705e2f9d4215a61afdfd95bf524ad","contentHash":"e1fd0acaae6f345f4e9f9d3538710420555732b3d150b9a0f723f98efdc29499"},"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/da-server/src/handlers/OpenHandler.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/da-server/src/handlers/OpenHandler.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":37}},"3":{"start":{"line":5,"column":18},"end":{"line":5,"column":38}},"4":{"start":{"line":7,"column":0},"end":{"line":11,"column":32}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":50}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":70}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":44}},"8":{"start":{"line":17,"column":12},"end":{"line":17,"column":28}},"9":{"start":{"line":18,"column":16},"end":{"line":18,"column":25}},"10":{"start":{"line":20,"column":8},"end":{"line":20,"column":31}},"11":{"start":{"line":21,"column":8},"end":{"line":21,"column":29}},"12":{"start":{"line":22,"column":8},"end":{"line":22,"column":21}},"13":{"start":{"line":23,"column":8},"end":{"line":23,"column":23}},"14":{"start":{"line":24,"column":8},"end":{"line":28,"column":22}},"15":{"start":{"line":25,"column":12},"end":{"line":27,"column":13}},"16":{"start":{"line":26,"column":16},"end":{"line":26,"column":31}},"17":{"start":{"line":31,"column":8},"end":{"line":31,"column":48}},"18":{"start":{"line":32,"column":8},"end":{"line":37,"column":27}},"19":{"start":{"line":40,"column":8},"end":{"line":40,"column":114}},"20":{"start":{"line":43,"column":8},"end":{"line":43,"column":35}},"21":{"start":{"line":44,"column":8},"end":{"line":49,"column":9}},"22":{"start":{"line":45,"column":12},"end":{"line":45,"column":52}},"23":{"start":{"line":48,"column":12},"end":{"line":48,"column":27}},"24":{"start":{"line":52,"column":8},"end":{"line":52,"column":35}},"25":{"start":{"line":53,"column":8},"end":{"line":53,"column":25}},"26":{"start":{"line":58,"column":14},"end":{"line":58,"column":23}},"27":{"start":{"line":61,"column":8},"end":{"line":61,"column":27}},"28":{"start":{"line":62,"column":8},"end":{"line":62,"column":35}},"29":{"start":{"line":65,"column":8},"end":{"line":68,"column":9}},"30":{"start":{"line":66,"column":46},"end":{"line":66,"column":98}},"31":{"start":{"line":67,"column":44},"end":{"line":67,"column":86}},"32":{"start":{"line":69,"column":21},"end":{"line":69,"column":48}},"33":{"start":{"line":70,"column":8},"end":{"line":76,"column":9}},"34":{"start":{"line":71,"column":12},"end":{"line":75,"column":13}},"35":{"start":{"line":72,"column":36},"end":{"line":72,"column":68}},"36":{"start":{"line":73,"column":45},"end":{"line":73,"column":86}},"37":{"start":{"line":74,"column":46},"end":{"line":74,"column":88}},"38":{"start":{"line":82,"column":28},"end":{"line":82,"column":50}},"39":{"start":{"line":83,"column":8},"end":{"line":109,"column":9}},"40":{"start":{"line":84,"column":30},"end":{"line":84,"column":52}},"41":{"start":{"line":85,"column":32},"end":{"line":85,"column":56}},"42":{"start":{"line":86,"column":12},"end":{"line":108,"column":13}},"43":{"start":{"line":87,"column":16},"end":{"line":107,"column":17}},"44":{"start":{"line":89,"column":36},"end":{"line":103,"column":21}},"45":{"start":{"line":104,"column":20},"end":{"line":104,"column":42}},"46":{"start":{"line":105,"column":20},"end":{"line":105,"column":46}},"47":{"start":{"line":106,"column":20},"end":{"line":106,"column":67}},"48":{"start":{"line":112,"column":8},"end":{"line":122,"column":10}},"49":{"start":{"line":125,"column":22},"end":{"line":125,"column":38}},"50":{"start":{"line":126,"column":24},"end":{"line":126,"column":68}},"51":{"start":{"line":127,"column":8},"end":{"line":134,"column":9}},"52":{"start":{"line":128,"column":12},"end":{"line":130,"column":41}},"53":{"start":{"line":133,"column":12},"end":{"line":133,"column":125}},"54":{"start":{"line":137,"column":22},"end":{"line":137,"column":44}},"55":{"start":{"line":138,"column":25},"end":{"line":138,"column":52}},"56":{"start":{"line":139,"column":25},"end":{"line":139,"column":63}},"57":{"start":{"line":139,"column":46},"end":{"line":139,"column":62}},"58":{"start":{"line":140,"column":8},"end":{"line":142,"column":36}},"59":{"start":{"line":145,"column":23},"end":{"line":145,"column":39}},"60":{"start":{"line":146,"column":24},"end":{"line":146,"column":44}},"61":{"start":{"line":147,"column":8},"end":{"line":153,"column":9}},"62":{"start":{"line":148,"column":25},"end":{"line":148,"column":52}},"63":{"start":{"line":149,"column":12},"end":{"line":149,"column":92}},"64":{"start":{"line":152,"column":12},"end":{"line":152,"column":84}},"65":{"start":{"line":156,"column":22},"end":{"line":156,"column":26}},"66":{"start":{"line":157,"column":29},"end":{"line":160,"column":9}},"67":{"start":{"line":162,"column":12},"end":{"line":168,"column":21}},"68":{"start":{"line":171,"column":32},"end":{"line":171,"column":126}},"69":{"start":{"line":172,"column":12},"end":{"line":191,"column":39}},"70":{"start":{"line":193,"column":8},"end":{"line":202,"column":9}},"71":{"start":{"line":195,"column":32},"end":{"line":195,"column":80}},"72":{"start":{"line":196,"column":12},"end":{"line":201,"column":13}},"73":{"start":{"line":199,"column":16},"end":{"line":199,"column":57}},"74":{"start":{"line":200,"column":16},"end":{"line":200,"column":50}},"75":{"start":{"line":204,"column":28},"end":{"line":204,"column":55}},"76":{"start":{"line":205,"column":8},"end":{"line":217,"column":9}},"77":{"start":{"line":206,"column":12},"end":{"line":206,"column":39}},"78":{"start":{"line":208,"column":32},"end":{"line":208,"column":54}},"79":{"start":{"line":209,"column":12},"end":{"line":213,"column":13}},"80":{"start":{"line":210,"column":16},"end":{"line":212,"column":17}},"81":{"start":{"line":211,"column":20},"end":{"line":211,"column":55}},"82":{"start":{"line":216,"column":12},"end":{"line":216,"column":26}},"83":{"start":{"line":220,"column":0},"end":{"line":220,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":1},"end":{"line":7,"column":2}},"loc":{"start":{"line":7,"column":21},"end":{"line":11,"column":1}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":53},"end":{"line":29,"column":5}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":19},"end":{"line":24,"column":20}},"loc":{"start":{"line":24,"column":25},"end":{"line":28,"column":9}},"line":24},"3":{"name":"(anonymous_3)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":16},"end":{"line":38,"column":5}},"line":30},"4":{"name":"(anonymous_4)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":14},"end":{"line":41,"column":5}},"line":39},"5":{"name":"(anonymous_5)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":25},"end":{"line":50,"column":5}},"line":42},"6":{"name":"(anonymous_6)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":14},"end":{"line":54,"column":5}},"line":51},"7":{"name":"(anonymous_7)","decl":{"start":{"line":60,"column":4},"end":{"line":60,"column":5}},"loc":{"start":{"line":60,"column":30},"end":{"line":63,"column":5}},"line":60},"8":{"name":"(anonymous_8)","decl":{"start":{"line":64,"column":4},"end":{"line":64,"column":5}},"loc":{"start":{"line":64,"column":32},"end":{"line":77,"column":5}},"line":64},"9":{"name":"(anonymous_9)","decl":{"start":{"line":81,"column":4},"end":{"line":81,"column":5}},"loc":{"start":{"line":81,"column":45},"end":{"line":110,"column":5}},"line":81},"10":{"name":"(anonymous_10)","decl":{"start":{"line":111,"column":4},"end":{"line":111,"column":5}},"loc":{"start":{"line":111,"column":37},"end":{"line":123,"column":5}},"line":111},"11":{"name":"(anonymous_11)","decl":{"start":{"line":124,"column":4},"end":{"line":124,"column":5}},"loc":{"start":{"line":124,"column":35},"end":{"line":135,"column":5}},"line":124},"12":{"name":"(anonymous_12)","decl":{"start":{"line":136,"column":4},"end":{"line":136,"column":5}},"loc":{"start":{"line":136,"column":40},"end":{"line":143,"column":5}},"line":136},"13":{"name":"(anonymous_13)","decl":{"start":{"line":139,"column":41},"end":{"line":139,"column":42}},"loc":{"start":{"line":139,"column":46},"end":{"line":139,"column":62}},"line":139},"14":{"name":"(anonymous_14)","decl":{"start":{"line":144,"column":4},"end":{"line":144,"column":5}},"loc":{"start":{"line":144,"column":31},"end":{"line":154,"column":5}},"line":144},"15":{"name":"(anonymous_15)","decl":{"start":{"line":155,"column":4},"end":{"line":155,"column":5}},"loc":{"start":{"line":155,"column":41},"end":{"line":218,"column":5}},"line":155},"16":{"name":"returnError","decl":{"start":{"line":161,"column":17},"end":{"line":161,"column":28}},"loc":{"start":{"line":161,"column":31},"end":{"line":169,"column":9}},"line":161},"17":{"name":"returnSuccess","decl":{"start":{"line":170,"column":17},"end":{"line":170,"column":30}},"loc":{"start":{"line":170,"column":44},"end":{"line":192,"column":9}},"line":170}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":3},"end":{"line":11,"column":30}},"type":"binary-expr","locations":[{"start":{"line":11,"column":3},"end":{"line":11,"column":11}},{"start":{"line":11,"column":16},"end":{"line":11,"column":29}}],"line":11},"1":{"loc":{"start":{"line":25,"column":12},"end":{"line":27,"column":13}},"type":"if","locations":[{"start":{"line":25,"column":12},"end":{"line":27,"column":13}},{"start":{"line":25,"column":12},"end":{"line":27,"column":13}}],"line":25},"2":{"loc":{"start":{"line":44,"column":8},"end":{"line":49,"column":9}},"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":49,"column":9}},{"start":{"line":44,"column":8},"end":{"line":49,"column":9}}],"line":44},"3":{"loc":{"start":{"line":65,"column":8},"end":{"line":68,"column":9}},"type":"switch","locations":[{"start":{"line":66,"column":12},"end":{"line":66,"column":98}},{"start":{"line":67,"column":12},"end":{"line":67,"column":86}}],"line":65},"4":{"loc":{"start":{"line":70,"column":8},"end":{"line":76,"column":9}},"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":76,"column":9}},{"start":{"line":70,"column":8},"end":{"line":76,"column":9}}],"line":70},"5":{"loc":{"start":{"line":71,"column":12},"end":{"line":75,"column":13}},"type":"switch","locations":[{"start":{"line":72,"column":16},"end":{"line":72,"column":68}},{"start":{"line":73,"column":16},"end":{"line":73,"column":86}},{"start":{"line":74,"column":16},"end":{"line":74,"column":88}}],"line":71},"6":{"loc":{"start":{"line":83,"column":8},"end":{"line":109,"column":9}},"type":"if","locations":[{"start":{"line":83,"column":8},"end":{"line":109,"column":9}},{"start":{"line":83,"column":8},"end":{"line":109,"column":9}}],"line":83},"7":{"loc":{"start":{"line":86,"column":12},"end":{"line":108,"column":13}},"type":"if","locations":[{"start":{"line":86,"column":12},"end":{"line":108,"column":13}},{"start":{"line":86,"column":12},"end":{"line":108,"column":13}}],"line":86},"8":{"loc":{"start":{"line":86,"column":16},"end":{"line":86,"column":90}},"type":"binary-expr","locations":[{"start":{"line":86,"column":17},"end":{"line":86,"column":36}},{"start":{"line":86,"column":42},"end":{"line":86,"column":89}}],"line":86},"9":{"loc":{"start":{"line":87,"column":16},"end":{"line":107,"column":17}},"type":"if","locations":[{"start":{"line":87,"column":16},"end":{"line":107,"column":17}},{"start":{"line":87,"column":16},"end":{"line":107,"column":17}}],"line":87},"10":{"loc":{"start":{"line":87,"column":20},"end":{"line":87,"column":91}},"type":"binary-expr","locations":[{"start":{"line":87,"column":21},"end":{"line":87,"column":60}},{"start":{"line":87,"column":66},"end":{"line":87,"column":90}}],"line":87},"11":{"loc":{"start":{"line":127,"column":8},"end":{"line":134,"column":9}},"type":"if","locations":[{"start":{"line":127,"column":8},"end":{"line":134,"column":9}},{"start":{"line":127,"column":8},"end":{"line":134,"column":9}}],"line":127},"12":{"loc":{"start":{"line":193,"column":8},"end":{"line":202,"column":9}},"type":"if","locations":[{"start":{"line":193,"column":8},"end":{"line":202,"column":9}},{"start":{"line":193,"column":8},"end":{"line":202,"column":9}}],"line":193},"13":{"loc":{"start":{"line":196,"column":12},"end":{"line":201,"column":13}},"type":"if","locations":[{"start":{"line":196,"column":12},"end":{"line":201,"column":13}},{"start":{"line":196,"column":12},"end":{"line":201,"column":13}}],"line":196},"14":{"loc":{"start":{"line":205,"column":8},"end":{"line":217,"column":9}},"type":"if","locations":[{"start":{"line":205,"column":8},"end":{"line":217,"column":9}},{"start":{"line":205,"column":8},"end":{"line":217,"column":9}}],"line":205},"15":{"loc":{"start":{"line":209,"column":12},"end":{"line":213,"column":13}},"type":"if","locations":[{"start":{"line":209,"column":12},"end":{"line":213,"column":13}},{"start":{"line":209,"column":12},"end":{"line":213,"column":13}}],"line":209},"16":{"loc":{"start":{"line":210,"column":16},"end":{"line":212,"column":17}},"type":"if","locations":[{"start":{"line":210,"column":16},"end":{"line":212,"column":17}},{"start":{"line":210,"column":16},"end":{"line":212,"column":17}}],"line":210}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":70,"27":70,"28":70,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":70,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"0":[1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/da-server/src/handlers/OpenHandler.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/packages/da-server/src/handlers/OpenHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import { MessageHandler } from \"../BasicFDC3Server\";\nimport { InstanceID, ServerContext } from \"../ServerContext\";\nimport { Directory, DirectoryApp } from \"../directory/DirectoryInterface\";\nimport { ContextElement, OpenError, ResolveError } from \"@finos/fdc3\";\nimport {\n    AddContextListenerRequest,\n    AppIdentifier, AppMetadata,\n    BroadcastEvent,\n    FindInstancesRequest,\n    GetAppMetadataRequest,\n    OpenRequest,\n    WebConnectionProtocol4ValidateAppIdentity,\n    WebConnectionProtocol5ValidateAppIdentityFailedResponse,\n    WebConnectionProtocol5ValidateAppIdentitySuccessResponse\n} from \"@kite9/fdc3-common\";\nimport { errorResponse, successResponse } from \"./support\";\n\nenum AppState { Opening, DeliveringContext, Done }\n\nclass PendingApp {\n\n    private readonly sc: ServerContext<any>\n    private readonly msg: OpenRequest\n    readonly context: ContextElement | undefined\n    readonly source: AppMetadata\n    state: AppState = AppState.Opening\n    private openedApp: AppIdentifier | undefined = undefined\n\n    constructor(sc: ServerContext<any>, msg: OpenRequest, context: ContextElement | undefined, source: AppIdentifier, timeoutMs: number) {\n        this.context = context\n        this.source = source\n        this.sc = sc\n        this.msg = msg\n\n        setTimeout(() => {\n            if (this.state != AppState.Done) {\n                this.onError()\n            }\n        }, timeoutMs)\n    }\n\n    private onSuccess() {\n        this.sc.setAppConnected(this.openedApp!!)\n        successResponse(this.sc, this.msg, this.source, {\n            appIdentifier: {\n                appId: this.openedApp!!.appId,\n                instanceId: this.openedApp!!.instanceId\n            }\n        }, 'openResponse')\n    }\n\n    private onError() {\n        errorResponse(this.sc, this.msg, this.source, OpenError.AppTimeout, 'openResponse')\n    }\n\n    setOpened(openedApp: AppIdentifier) {\n        this.openedApp = openedApp\n        if (this.context) {\n            this.state = AppState.DeliveringContext\n        } else {\n            this.setDone()\n        }\n    }\n\n    setDone() {\n        this.state = AppState.Done\n        this.onSuccess()\n    }\n}\n\nexport class OpenHandler implements MessageHandler {\n\n    private readonly directory: Directory\n    readonly pending: Map<InstanceID, PendingApp> = new Map()\n    readonly timeoutMs: number\n\n    constructor(d: Directory, timeoutMs: number) {\n        this.directory = d\n        this.timeoutMs = timeoutMs\n    }\n\n    async accept(msg: any, sc: ServerContext<any>, uuid: InstanceID): Promise<void> {\n        switch (msg.type as string) {\n            case 'addContextListenerRequest': return this.handleAddContextListener(msg as AddContextListenerRequest, sc, uuid)\n            case 'WCP4ValidateAppIdentity': return this.handleValidate(msg as WebConnectionProtocol4ValidateAppIdentity, sc, uuid)\n        }\n\n        const from = sc.getInstanceDetails(uuid)\n        if (from) {\n            switch (msg.type as string) {\n                case 'openRequest': return this.open(msg as OpenRequest, sc, from)\n                case 'findInstancesRequest': return this.findInstances(msg as FindInstancesRequest, sc, from)\n                case 'getAppMetadataRequest': return this.getAppMetadata(msg as GetAppMetadataRequest, sc, from)\n            }\n        }\n\n    }\n\n    /**\n     * This deals with sending pending context to listeners of newly-opened apps.\n     */\n    handleAddContextListener(arg0: AddContextListenerRequest, sc: ServerContext<any>, from: InstanceID): void {\n        const pendingOpen = this.pending.get(from)\n\n        if (pendingOpen) {\n            const channelId = arg0.payload.channelId!!\n            const contextType = arg0.payload.contextType\n\n            if ((pendingOpen.context) && (pendingOpen.state == AppState.DeliveringContext)) {\n                if ((contextType == pendingOpen.context.type) || (contextType == undefined)) {\n                    // ok, we can deliver to this listener\n\n                    const message: BroadcastEvent = {\n                        meta: {\n                            eventUuid: sc.createUUID(),\n                            timestamp: new Date()\n                        },\n                        type: \"broadcastEvent\",\n                        payload: {\n                            channelId,\n                            context: pendingOpen.context,\n                            originatingApp: {\n                                appId: pendingOpen.source.appId,\n                                instanceId: pendingOpen.source.instanceId\n                            }\n                        }\n                    }\n\n                    pendingOpen.setDone()\n                    this.pending.delete(from)\n                    sc.post(message, arg0.meta.source?.instanceId!!)\n                }\n            }\n        }\n    }\n\n    filterPublicDetails(appD: DirectoryApp, appID: AppIdentifier): AppMetadata {\n        return {\n            appId: appD.appId,\n            name: appD.name,\n            version: appD.version,\n            title: appD.title,\n            tooltip: appD.tooltip,\n            description: appD.description,\n            icons: appD.icons,\n            screenshots: appD.screenshots,\n            instanceId: appID.instanceId\n        }\n    }\n\n    getAppMetadata(arg0: GetAppMetadataRequest, sc: ServerContext<any>, from: AppIdentifier): void {\n        const appID = arg0.payload.app\n        const details = this.directory.retrieveAppsById(appID.appId)\n        if (details.length > 0) {\n            successResponse(sc, arg0, from, {\n                appMetadata: this.filterPublicDetails(details[0], appID)\n            }, 'getAppMetadataResponse')\n        } else {\n            errorResponse(sc, arg0, from, ResolveError.TargetAppUnavailable, 'getAppMetadataResponse')\n        }\n    }\n\n\n    async findInstances(arg0: FindInstancesRequest, sc: ServerContext<any>, from: AppIdentifier): Promise<void> {\n        const appId = arg0.payload.app.appId\n        const openApps = await sc.getConnectedApps()\n        const matching = openApps.filter(a => a.appId == appId)\n        successResponse(sc, arg0, from, {\n            appIdentifiers: matching\n        }, 'findInstancesResponse')\n    }\n\n    async open(arg0: OpenRequest, sc: ServerContext<any>, from: AppIdentifier): Promise<void> {\n\n        const source = arg0.payload.app\n        const context = arg0.payload.context\n\n        try {\n            const uuid = await sc.open(source.appId)\n            this.pending.set(uuid, new PendingApp(sc, arg0, context, from, this.timeoutMs))\n        } catch (e: any) {\n            errorResponse(sc, arg0, from, e.message, 'openResponse')\n        }\n    }\n\n    async handleValidate(arg0: WebConnectionProtocol4ValidateAppIdentity, sc: ServerContext<any>, from: InstanceID): Promise<void> {\n        const _this = this\n\n        const responseMeta = {\n            connectionAttemptUuid: arg0.meta.connectionAttemptUuid,\n            timestamp: new Date()\n        }\n\n        function returnError() {\n            sc.post({\n                meta: responseMeta,\n                type: 'WCP5ValidateAppIdentityFailedResponse',\n                payload: {\n                    message: 'App Instance not found'\n                }\n            } as WebConnectionProtocol5ValidateAppIdentityFailedResponse, from)\n        }\n\n        function returnSuccess(appIdentity: AppIdentifier) {\n            const aopMetadata = _this.filterPublicDetails(_this.directory.retrieveAppsById(appIdentity.appId)[0], appIdentity)\n            sc.post({\n                meta: responseMeta,\n                type: 'WCP5ValidateAppIdentityResponse',\n                payload: {\n                    appId: appIdentity.appId,\n                    instanceId: appIdentity.instanceId,\n                    instanceUuid: from,\n                    implementationMetadata: {\n                        provider: sc.provider(),\n                        providerVersion: sc.providerVersion(),\n                        fdc3Version: sc.fdc3Version(),\n                        optionalFeatures: {\n                            DesktopAgentBridging: false,\n                            OriginatingAppMetadata: true,\n                            UserChannelMembershipAPIs: true\n                        },\n                        appMetadata: aopMetadata\n                    }\n                }\n            } as WebConnectionProtocol5ValidateAppIdentitySuccessResponse, appIdentity.instanceId!!)\n        }\n\n        if (arg0.payload.instanceUuid) {\n            // existing app reconnecting\n            const appIdentity = sc.getInstanceDetails(arg0.payload.instanceUuid)\n\n            if (appIdentity) {\n                // in this case, the app is reconnecting, so let's just re-assign the \n                // identity\n                sc.setInstanceDetails(from, appIdentity)\n                return returnSuccess(appIdentity)\n            }\n        }\n\n        // we need to assign an identity to this app\n        const appIdentity = sc.getInstanceDetails(from)\n        if (appIdentity) {\n            returnSuccess(appIdentity)\n\n            // make sure if the opener is listening for this app to open gets informed\n            const pendingOpen = this.pending.get(from)\n            if (pendingOpen) {\n                if (pendingOpen.state == AppState.Opening) {\n                    pendingOpen.setOpened(appIdentity)\n                }\n            }\n        } else {\n            returnError()\n        }\n\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"661ed0ddf24cd786aa968f250a5123d27acfff2a","contentHash":"430d784060cbe16afae171559343da7ec3ff21120376fb8f7ae1e086d9d2d85a"},"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/da-server/src/directory/BasicDirectory.ts":{"path":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/da-server/src/directory/BasicDirectory.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":54}},"3":{"start":{"line":6,"column":4},"end":{"line":20,"column":5}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":20}},"5":{"start":{"line":9,"column":9},"end":{"line":20,"column":5}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":20}},"7":{"start":{"line":12,"column":9},"end":{"line":20,"column":5}},"8":{"start":{"line":13,"column":8},"end":{"line":13,"column":21}},"9":{"start":{"line":15,"column":9},"end":{"line":20,"column":5}},"10":{"start":{"line":16,"column":8},"end":{"line":16,"column":20}},"11":{"start":{"line":19,"column":8},"end":{"line":19,"column":21}},"12":{"start":{"line":28,"column":8},"end":{"line":28,"column":28}},"13":{"start":{"line":31,"column":20},"end":{"line":33,"column":61}},"14":{"start":{"line":34,"column":8},"end":{"line":34,"column":70}},"15":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"16":{"start":{"line":38,"column":19},"end":{"line":38,"column":55}},"17":{"start":{"line":39,"column":20},"end":{"line":39,"column":38}},"18":{"start":{"line":40,"column":28},"end":{"line":46,"column":10}},"19":{"start":{"line":41,"column":12},"end":{"line":45,"column":14}},"20":{"start":{"line":47,"column":8},"end":{"line":47,"column":27}},"21":{"start":{"line":50,"column":27},"end":{"line":51,"column":56}},"22":{"start":{"line":51,"column":26},"end":{"line":51,"column":55}},"23":{"start":{"line":52,"column":8},"end":{"line":52,"column":26}},"24":{"start":{"line":55,"column":32},"end":{"line":56,"column":84}},"25":{"start":{"line":56,"column":25},"end":{"line":56,"column":83}},"26":{"start":{"line":57,"column":8},"end":{"line":57,"column":31}},"27":{"start":{"line":60,"column":8},"end":{"line":63,"column":25}},"28":{"start":{"line":61,"column":25},"end":{"line":63,"column":23}},"29":{"start":{"line":62,"column":25},"end":{"line":62,"column":83}},"30":{"start":{"line":66,"column":8},"end":{"line":66,"column":68}},"31":{"start":{"line":66,"column":50},"end":{"line":66,"column":66}},"32":{"start":{"line":69,"column":8},"end":{"line":69,"column":28}},"33":{"start":{"line":72,"column":0},"end":{"line":72,"column":40}}},"fnMap":{"0":{"name":"genericResultTypeSame","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":30}},"loc":{"start":{"line":5,"column":47},"end":{"line":21,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":22},"end":{"line":29,"column":5}},"line":27},"2":{"name":"(anonymous_2)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":58},"end":{"line":36,"column":5}},"line":30},"3":{"name":"(anonymous_3)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":29},"end":{"line":48,"column":5}},"line":37},"4":{"name":"(anonymous_4)","decl":{"start":{"line":40,"column":36},"end":{"line":40,"column":37}},"loc":{"start":{"line":40,"column":54},"end":{"line":46,"column":9}},"line":40},"5":{"name":"(anonymous_5)","decl":{"start":{"line":49,"column":4},"end":{"line":49,"column":5}},"loc":{"start":{"line":49,"column":25},"end":{"line":53,"column":5}},"line":49},"6":{"name":"(anonymous_6)","decl":{"start":{"line":51,"column":21},"end":{"line":51,"column":22}},"loc":{"start":{"line":51,"column":26},"end":{"line":51,"column":55}},"line":51},"7":{"name":"(anonymous_7)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":57},"end":{"line":58,"column":5}},"line":54},"8":{"name":"(anonymous_8)","decl":{"start":{"line":56,"column":20},"end":{"line":56,"column":21}},"loc":{"start":{"line":56,"column":25},"end":{"line":56,"column":83}},"line":56},"9":{"name":"(anonymous_9)","decl":{"start":{"line":59,"column":4},"end":{"line":59,"column":5}},"loc":{"start":{"line":59,"column":54},"end":{"line":64,"column":5}},"line":59},"10":{"name":"(anonymous_10)","decl":{"start":{"line":61,"column":20},"end":{"line":61,"column":21}},"loc":{"start":{"line":61,"column":25},"end":{"line":63,"column":23}},"line":61},"11":{"name":"(anonymous_11)","decl":{"start":{"line":62,"column":20},"end":{"line":62,"column":21}},"loc":{"start":{"line":62,"column":25},"end":{"line":62,"column":83}},"line":62},"12":{"name":"(anonymous_12)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":28},"end":{"line":67,"column":5}},"line":65},"13":{"name":"(anonymous_13)","decl":{"start":{"line":66,"column":45},"end":{"line":66,"column":46}},"loc":{"start":{"line":66,"column":50},"end":{"line":66,"column":66}},"line":66},"14":{"name":"(anonymous_14)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":22},"end":{"line":70,"column":5}},"line":68}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":4},"end":{"line":20,"column":5}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":20,"column":5}},{"start":{"line":6,"column":4},"end":{"line":20,"column":5}}],"line":6},"1":{"loc":{"start":{"line":9,"column":9},"end":{"line":20,"column":5}},"type":"if","locations":[{"start":{"line":9,"column":9},"end":{"line":20,"column":5}},{"start":{"line":9,"column":9},"end":{"line":20,"column":5}}],"line":9},"2":{"loc":{"start":{"line":12,"column":9},"end":{"line":20,"column":5}},"type":"if","locations":[{"start":{"line":12,"column":9},"end":{"line":20,"column":5}},{"start":{"line":12,"column":9},"end":{"line":20,"column":5}}],"line":12},"3":{"loc":{"start":{"line":15,"column":9},"end":{"line":20,"column":5}},"type":"if","locations":[{"start":{"line":15,"column":9},"end":{"line":20,"column":5}},{"start":{"line":15,"column":9},"end":{"line":20,"column":5}}],"line":15},"4":{"loc":{"start":{"line":15,"column":13},"end":{"line":15,"column":65}},"type":"binary-expr","locations":[{"start":{"line":15,"column":13},"end":{"line":15,"column":40}},{"start":{"line":15,"column":44},"end":{"line":15,"column":65}}],"line":15},"5":{"loc":{"start":{"line":31,"column":20},"end":{"line":33,"column":61}},"type":"binary-expr","locations":[{"start":{"line":31,"column":22},"end":{"line":31,"column":45}},{"start":{"line":31,"column":51},"end":{"line":31,"column":77}},{"start":{"line":32,"column":14},"end":{"line":32,"column":38}},{"start":{"line":32,"column":44},"end":{"line":32,"column":84}},{"start":{"line":33,"column":13},"end":{"line":33,"column":60}}],"line":31},"6":{"loc":{"start":{"line":32,"column":45},"end":{"line":32,"column":61}},"type":"binary-expr","locations":[{"start":{"line":32,"column":45},"end":{"line":32,"column":55}},{"start":{"line":32,"column":59},"end":{"line":32,"column":61}}],"line":32},"7":{"loc":{"start":{"line":38,"column":19},"end":{"line":38,"column":55}},"type":"binary-expr","locations":[{"start":{"line":38,"column":19},"end":{"line":38,"column":49}},{"start":{"line":38,"column":53},"end":{"line":38,"column":55}}],"line":38}},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":70,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1},"f":{"0":0,"1":70,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0,0],"6":[0,0],"7":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/rob/Documents/finos/fdc3-general/FDC3/packages/da-server/src/directory/BasicDirectory.ts","sources":["/Users/rob/Documents/finos/fdc3-general/FDC3/packages/da-server/src/directory/BasicDirectory.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directory, DirectoryApp, DirectoryIntent } from \"./DirectoryInterface\"\n\nexport function genericResultTypeSame(real: string | undefined, required: string | undefined) {\n    if (required == undefined) {\n        return true\n    } else if (real == required) {\n        return true\n    } else if (real == undefined) {\n        return false    // required is not undefined, so asking for something\n    } else if (real.startsWith(\"channel<\") && required == \"channel\") {\n        return true\n    } else {\n        return false\n    }\n}\n\n/**\n * Basic directory implementation that allows queries over a set of apps.\n */\nexport class BasicDirectory implements Directory {\n\n    allApps: DirectoryApp[]\n\n    constructor(apps: DirectoryApp[]) {\n        this.allApps = apps\n    }\n\n    private intentMatches(i: DirectoryIntent, contextType: string | undefined, intentName: string | undefined, resultType: string | undefined): boolean {\n        const out = ((intentName == undefined) || (i.intentName == intentName)) &&\n            ((contextType == undefined) || ((i.contexts ?? []).includes(contextType))) &&\n            (genericResultTypeSame(i.resultType, resultType))\n        console.log(`Intent ${JSON.stringify(i)} matches ? ${out}}\"`)\n        return out\n    }\n\n    private retrieveIntentsForApp(a: DirectoryApp): DirectoryIntent[] {\n        const lf = a.interop?.intents?.listensFor ?? {}\n        const lfa = Object.entries(lf)\n        const lfAugmented = lfa.map(([key, value]) => {\n            return {\n                intentName: key,\n                ...(value as any),\n                appId: a.appId\n            }\n        })\n        return lfAugmented as DirectoryIntent[]\n    }\n\n    retrieveAllIntents(): DirectoryIntent[] {\n        const allIntents = this.retrieveAllApps()\n            .flatMap(a => this.retrieveIntentsForApp(a))\n\n        return allIntents\n    }\n\n    retrieveIntents(contextType: string | undefined, intentName: string | undefined, resultType: string | undefined): DirectoryIntent[] {\n        const matchingIntents = this.retrieveAllIntents()\n            .filter(i => this.intentMatches(i, contextType, intentName, resultType))\n        return matchingIntents\n    }\n\n    retrieveApps(contextType: string | undefined, intentName: string | undefined, resultType: string | undefined): DirectoryApp[] {\n        return this.retrieveAllApps()\n            .filter(a => this.retrieveIntentsForApp(a)\n                .filter(i => this.intentMatches(i, contextType, intentName, resultType))\n                .length > 0)\n    }\n\n\n    retrieveAppsById(appId: string): DirectoryApp[] {\n        return this.retrieveAllApps().filter(a => a.appId == appId)\n    }\n\n    retrieveAllApps(): DirectoryApp[] {\n        return this.allApps\n    }\n}\n\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"586223c0aa8191c9e30b72c8ca5cd1e137037f1e","contentHash":"70a1ca0924927130f1287e89343c0156563c4066bc30a0bb8222ecb21f1e8544"}}